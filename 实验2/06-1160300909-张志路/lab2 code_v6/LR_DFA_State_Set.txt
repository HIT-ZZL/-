
I0:
P'-> .P ,#
P-> .D ,#
P-> .S ,#
D-> .D D ,#
D-> .proc id ; D S ,#
D-> .T id ; ,#
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .S1 ,#
S-> .S2 ,#
S-> .call id ( EL ) ,#
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I1:
P'-> P. ,#

I2:
P-> D. ,#
D-> D .D ,#
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,#
D-> .proc id ; D S ,#
D-> .T id ; ,#
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I3:
D-> D D. ,#
D-> D D. ,proc
D-> D D. ,record
D-> D D. ,integer
D-> D D. ,real
D-> D .D ,#
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,#
D-> .proc id ; D S ,#
D-> .T id ; ,#
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I4:
D-> proc .id ; D S ,#
D-> proc .id ; D S ,proc
D-> proc .id ; D S ,record
D-> proc .id ; D S ,integer
D-> proc .id ; D S ,real

I5:
D-> proc id .; D S ,#
D-> proc id .; D S ,proc
D-> proc id .; D S ,record
D-> proc id .; D S ,integer
D-> proc id .; D S ,real

I6:
D-> proc id ; .D S ,#
D-> proc id ; .D S ,proc
D-> proc id ; .D S ,record
D-> proc id ; .D S ,integer
D-> proc id ; .D S ,real
D-> .D D ,call
D-> .D D ,id
D-> .D D ,while
D-> .D D ,begin
D-> .D D ,if
D-> .proc id ; D S ,call
D-> .proc id ; D S ,id
D-> .proc id ; D S ,while
D-> .proc id ; D S ,begin
D-> .proc id ; D S ,if
D-> .T id ; ,call
D-> .T id ; ,id
D-> .T id ; ,while
D-> .T id ; ,begin
D-> .T id ; ,if
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I7:
D-> proc id ; D .S ,#
D-> proc id ; D .S ,proc
D-> proc id ; D .S ,record
D-> proc id ; D .S ,integer
D-> proc id ; D .S ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,begin
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .S1 ,#
S-> .S2 ,#
S-> .call id ( EL ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .S1 ,proc
S-> .S2 ,proc
S-> .call id ( EL ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .S1 ,record
S-> .S2 ,record
S-> .call id ( EL ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .S1 ,integer
S-> .S2 ,integer
S-> .call id ( EL ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .S1 ,real
S-> .S2 ,real
S-> .call id ( EL ) ,real
D-> .D D ,call
D-> .proc id ; D S ,call
D-> .T id ; ,call
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,while
D-> .proc id ; D S ,while
D-> .T id ; ,while
D-> .D D ,begin
D-> .proc id ; D S ,begin
D-> .T id ; ,begin
D-> .D D ,if
D-> .proc id ; D S ,if
D-> .T id ; ,if
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
T-> .X C ,id
T-> .record D ,id
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I8:
D-> proc id ; D S. ,#
D-> proc id ; D S. ,proc
D-> proc id ; D S. ,record
D-> proc id ; D S. ,integer
D-> proc id ; D S. ,real
S-> S .S ,#
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .S1 ,#
S-> .S2 ,#
S-> .call id ( EL ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .S1 ,proc
S-> .S2 ,proc
S-> .call id ( EL ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .S1 ,record
S-> .S2 ,record
S-> .call id ( EL ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .S1 ,integer
S-> .S2 ,integer
S-> .call id ( EL ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .S1 ,real
S-> .S2 ,real
S-> .call id ( EL ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I9:
S-> S S. ,#
S-> S S. ,proc
S-> S S. ,record
S-> S S. ,integer
S-> S S. ,real
S-> S S. ,call
S-> S S. ,id
S-> S S. ,while
S-> S S. ,begin
S-> S S. ,if
S-> S .S ,#
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .S1 ,#
S-> .S2 ,#
S-> .call id ( EL ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .S1 ,proc
S-> .S2 ,proc
S-> .call id ( EL ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .S1 ,record
S-> .S2 ,record
S-> .call id ( EL ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .S1 ,integer
S-> .S2 ,integer
S-> .call id ( EL ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .S1 ,real
S-> .S2 ,real
S-> .call id ( EL ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I10:
S-> id .= E ; ,#
S-> id .= E ; ,proc
S-> id .= E ; ,record
S-> id .= E ; ,integer
S-> id .= E ; ,real
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,begin
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I11:
S-> id = .E ; ,#
S-> id = .E ; ,proc
S-> id = .E ; ,record
S-> id = .E ; ,integer
S-> id = .E ; ,real
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,begin
S-> id = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I12:
S-> id = E .; ,#
S-> id = E .; ,proc
S-> id = E .; ,record
S-> id = E .; ,integer
S-> id = E .; ,real
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,begin
S-> id = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I13:
S-> id = E ;. ,#
S-> id = E ;. ,proc
S-> id = E ;. ,record
S-> id = E ;. ,integer
S-> id = E ;. ,real
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,begin
S-> id = E ;. ,if

I14:
E-> E + .E1 ,;
E-> E + .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I15:
E-> E + E1. ,;
E-> E + E1. ,+
E1-> E1 .* E2 ,;
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I16:
E1-> E1 * .E2 ,;
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I17:
E1-> E1 * E2. ,;
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I18:
E2-> ( .E ) ,;
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I19:
E2-> ( E .) ,;
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I20:
E2-> ( E ). ,;
E2-> ( E ). ,+
E2-> ( E ). ,*

I21:
E-> E + .E1 ,)
E-> E + .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I22:
E-> E + E1. ,)
E-> E + E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I23:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I24:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I25:
E2-> ( .E ) ,)
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I26:
E2-> ( E .) ,)
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I27:
E2-> ( E ). ,)
E2-> ( E ). ,+
E2-> ( E ). ,*

I28:
E-> E1. ,)
E-> E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I29:
E1-> E2. ,)
E1-> E2. ,+
E1-> E2. ,*

I30:
E2-> - .E ,)
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I31:
E2-> - E. ,)
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I32:
E-> E + .E1 ,)
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I33:
E-> E + E1. ,)
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I34:
E2-> id. ,)
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I35:
L-> id [ .E ] ,)
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I36:
L-> id [ E .] ,)
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I37:
L-> id [ E ]. ,)
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I38:
E-> E + .E1 ,]
E-> E + .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I39:
E-> E + E1. ,]
E-> E + E1. ,+
E1-> E1 .* E2 ,]
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I40:
E1-> E1 * .E2 ,]
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I41:
E1-> E1 * E2. ,]
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I42:
E2-> ( .E ) ,]
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I43:
E2-> ( E .) ,]
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I44:
E2-> ( E ). ,]
E2-> ( E ). ,+
E2-> ( E ). ,*

I45:
E2-> num. ,)
E2-> num. ,+
E2-> num. ,*

I46:
E2-> L. ,)
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I47:
L-> L [ .E ] ,)
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I48:
L-> L [ E .] ,)
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I49:
L-> L [ E ]. ,)
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I50:
E-> E1. ,]
E-> E1. ,+
E1-> E1 .* E2 ,]
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I51:
E1-> E2. ,]
E1-> E2. ,+
E1-> E2. ,*

I52:
E2-> - .E ,]
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I53:
E2-> - E. ,]
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,]
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I54:
E-> E + .E1 ,]
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I55:
E-> E + E1. ,]
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,]
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I56:
E2-> id. ,]
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,]
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I57:
L-> id [ .E ] ,]
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I58:
L-> id [ E .] ,]
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I59:
L-> id [ E ]. ,]
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I60:
E2-> num. ,]
E2-> num. ,+
E2-> num. ,*

I61:
E2-> L. ,]
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,]
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I62:
L-> L [ .E ] ,]
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I63:
L-> L [ E .] ,]
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I64:
L-> L [ E ]. ,]
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I65:
E-> E1. ,]
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,]
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I66:
E-> E1. ,)
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I67:
E2-> - .E ,;
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I68:
E2-> - E. ,;
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,;
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I69:
E-> E + .E1 ,;
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I70:
E-> E + E1. ,;
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,;
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I71:
E1-> E2. ,;
E1-> E2. ,+
E1-> E2. ,*

I72:
E2-> id. ,;
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,;
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I73:
L-> id [ .E ] ,;
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I74:
L-> id [ E .] ,;
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I75:
L-> id [ E ]. ,;
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I76:
E2-> num. ,;
E2-> num. ,+
E2-> num. ,*

I77:
E2-> L. ,;
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,;
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I78:
L-> L [ .E ] ,;
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I79:
L-> L [ E .] ,;
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I80:
L-> L [ E ]. ,;
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I81:
E-> E1. ,;
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,;
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I82:
E-> E1. ,;
E-> E1. ,+
E1-> E1 .* E2 ,;
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I83:
L-> id [ .E ] ,=
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I84:
L-> id [ E .] ,=
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I85:
L-> id [ E ]. ,=
L-> id [ E ]. ,[

I86:
S-> L .= E ; ,#
S-> L .= E ; ,proc
S-> L .= E ; ,record
S-> L .= E ; ,integer
S-> L .= E ; ,real
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,begin
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I87:
S-> L = .E ; ,#
S-> L = .E ; ,proc
S-> L = .E ; ,record
S-> L = .E ; ,integer
S-> L = .E ; ,real
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,begin
S-> L = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I88:
S-> L = E .; ,#
S-> L = E .; ,proc
S-> L = E .; ,record
S-> L = E .; ,integer
S-> L = E .; ,real
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,begin
S-> L = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I89:
S-> L = E ;. ,#
S-> L = E ;. ,proc
S-> L = E ;. ,record
S-> L = E ;. ,integer
S-> L = E ;. ,real
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,begin
S-> L = E ;. ,if

I90:
L-> L [ .E ] ,=
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I91:
L-> L [ E .] ,=
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I92:
L-> L [ E ]. ,=
L-> L [ E ]. ,[

I93:
S-> S1. ,#
S-> S1. ,proc
S-> S1. ,record
S-> S1. ,integer
S-> S1. ,real
S-> S1. ,call
S-> S1. ,id
S-> S1. ,while
S-> S1. ,begin
S-> S1. ,if

I94:
S-> S2. ,#
S-> S2. ,proc
S-> S2. ,record
S-> S2. ,integer
S-> S2. ,real
S-> S2. ,call
S-> S2. ,id
S-> S2. ,while
S-> S2. ,begin
S-> S2. ,if

I95:
S-> call .id ( EL ) ,#
S-> call .id ( EL ) ,proc
S-> call .id ( EL ) ,record
S-> call .id ( EL ) ,integer
S-> call .id ( EL ) ,real
S-> call .id ( EL ) ,call
S-> call .id ( EL ) ,id
S-> call .id ( EL ) ,while
S-> call .id ( EL ) ,begin
S-> call .id ( EL ) ,if

I96:
S-> call id .( EL ) ,#
S-> call id .( EL ) ,proc
S-> call id .( EL ) ,record
S-> call id .( EL ) ,integer
S-> call id .( EL ) ,real
S-> call id .( EL ) ,call
S-> call id .( EL ) ,id
S-> call id .( EL ) ,while
S-> call id .( EL ) ,begin
S-> call id .( EL ) ,if

I97:
S-> call id ( .EL ) ,#
S-> call id ( .EL ) ,proc
S-> call id ( .EL ) ,record
S-> call id ( .EL ) ,integer
S-> call id ( .EL ) ,real
S-> call id ( .EL ) ,call
S-> call id ( .EL ) ,id
S-> call id ( .EL ) ,while
S-> call id ( .EL ) ,begin
S-> call id ( .EL ) ,if
EL-> .EL , E ,)
EL-> .E ,)
EL-> .EL , E ,,
EL-> .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I98:
S-> call id ( EL .) ,#
S-> call id ( EL .) ,proc
S-> call id ( EL .) ,record
S-> call id ( EL .) ,integer
S-> call id ( EL .) ,real
S-> call id ( EL .) ,call
S-> call id ( EL .) ,id
S-> call id ( EL .) ,while
S-> call id ( EL .) ,begin
S-> call id ( EL .) ,if
EL-> EL ., E ,)
EL-> EL ., E ,,

I99:
S-> call id ( EL ). ,#
S-> call id ( EL ). ,proc
S-> call id ( EL ). ,record
S-> call id ( EL ). ,integer
S-> call id ( EL ). ,real
S-> call id ( EL ). ,call
S-> call id ( EL ). ,id
S-> call id ( EL ). ,while
S-> call id ( EL ). ,begin
S-> call id ( EL ). ,if

I100:
EL-> EL , .E ,)
EL-> EL , .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I101:
EL-> EL , E. ,)
EL-> EL , E. ,,
E-> E .+ E1 ,)
E-> E .+ E1 ,,
E-> E .+ E1 ,+

I102:
E-> E + .E1 ,)
E-> E + .E1 ,,
E-> E + .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I103:
E-> E + E1. ,)
E-> E + E1. ,,
E-> E + E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,,
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I104:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,,
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I105:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,,
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I106:
E2-> ( .E ) ,)
E2-> ( .E ) ,,
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I107:
E2-> ( E .) ,)
E2-> ( E .) ,,
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I108:
E2-> ( E ). ,)
E2-> ( E ). ,,
E2-> ( E ). ,+
E2-> ( E ). ,*

I109:
E2-> - .E ,)
E2-> - .E ,,
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I110:
E2-> - E. ,)
E2-> - E. ,,
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,,
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I111:
E-> E + .E1 ,)
E-> E + .E1 ,,
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I112:
E-> E + E1. ,)
E-> E + E1. ,,
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,,
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I113:
E1-> E2. ,)
E1-> E2. ,,
E1-> E2. ,+
E1-> E2. ,*

I114:
E2-> id. ,)
E2-> id. ,,
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,,
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I115:
L-> id [ .E ] ,)
L-> id [ .E ] ,,
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I116:
L-> id [ E .] ,)
L-> id [ E .] ,,
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I117:
L-> id [ E ]. ,)
L-> id [ E ]. ,,
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I118:
E2-> num. ,)
E2-> num. ,,
E2-> num. ,+
E2-> num. ,*

I119:
E2-> L. ,)
E2-> L. ,,
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,,
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I120:
L-> L [ .E ] ,)
L-> L [ .E ] ,,
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I121:
L-> L [ E .] ,)
L-> L [ E .] ,,
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I122:
L-> L [ E ]. ,)
L-> L [ E ]. ,,
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I123:
E-> E1. ,)
E-> E1. ,,
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,,
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I124:
E-> E1. ,)
E-> E1. ,,
E-> E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,,
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I125:
EL-> E. ,)
EL-> E. ,,
E-> E .+ E1 ,)
E-> E .+ E1 ,,
E-> E .+ E1 ,+

I126:
S1-> if .B then S1 else S1 ,#
S2-> if .B then S1 else S2 ,#
S2-> if .B then S0 ,#
S1-> if .B then S1 else S1 ,proc
S2-> if .B then S1 else S2 ,proc
S2-> if .B then S0 ,proc
S1-> if .B then S1 else S1 ,record
S2-> if .B then S1 else S2 ,record
S2-> if .B then S0 ,record
S1-> if .B then S1 else S1 ,integer
S2-> if .B then S1 else S2 ,integer
S2-> if .B then S0 ,integer
S1-> if .B then S1 else S1 ,real
S2-> if .B then S1 else S2 ,real
S2-> if .B then S0 ,real
S1-> if .B then S1 else S1 ,call
S2-> if .B then S1 else S2 ,call
S2-> if .B then S0 ,call
S1-> if .B then S1 else S1 ,id
S2-> if .B then S1 else S2 ,id
S2-> if .B then S0 ,id
S1-> if .B then S1 else S1 ,while
S2-> if .B then S1 else S2 ,while
S2-> if .B then S0 ,while
S1-> if .B then S1 else S1 ,begin
S2-> if .B then S1 else S2 ,begin
S2-> if .B then S0 ,begin
S1-> if .B then S1 else S1 ,if
S2-> if .B then S1 else S2 ,if
S2-> if .B then S0 ,if
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I127:
S1-> if B .then S1 else S1 ,#
S2-> if B .then S1 else S2 ,#
S2-> if B .then S0 ,#
S1-> if B .then S1 else S1 ,proc
S2-> if B .then S1 else S2 ,proc
S2-> if B .then S0 ,proc
S1-> if B .then S1 else S1 ,record
S2-> if B .then S1 else S2 ,record
S2-> if B .then S0 ,record
S1-> if B .then S1 else S1 ,integer
S2-> if B .then S1 else S2 ,integer
S2-> if B .then S0 ,integer
S1-> if B .then S1 else S1 ,real
S2-> if B .then S1 else S2 ,real
S2-> if B .then S0 ,real
S1-> if B .then S1 else S1 ,call
S2-> if B .then S1 else S2 ,call
S2-> if B .then S0 ,call
S1-> if B .then S1 else S1 ,id
S2-> if B .then S1 else S2 ,id
S2-> if B .then S0 ,id
S1-> if B .then S1 else S1 ,while
S2-> if B .then S1 else S2 ,while
S2-> if B .then S0 ,while
S1-> if B .then S1 else S1 ,begin
S2-> if B .then S1 else S2 ,begin
S2-> if B .then S0 ,begin
S1-> if B .then S1 else S1 ,if
S2-> if B .then S1 else S2 ,if
S2-> if B .then S0 ,if
B-> B .or B1 ,then
B-> B .or B1 ,or

I128:
S1-> if B then .S1 else S1 ,#
S2-> if B then .S1 else S2 ,#
S2-> if B then .S0 ,#
S1-> if B then .S1 else S1 ,proc
S2-> if B then .S1 else S2 ,proc
S2-> if B then .S0 ,proc
S1-> if B then .S1 else S1 ,record
S2-> if B then .S1 else S2 ,record
S2-> if B then .S0 ,record
S1-> if B then .S1 else S1 ,integer
S2-> if B then .S1 else S2 ,integer
S2-> if B then .S0 ,integer
S1-> if B then .S1 else S1 ,real
S2-> if B then .S1 else S2 ,real
S2-> if B then .S0 ,real
S1-> if B then .S1 else S1 ,call
S2-> if B then .S1 else S2 ,call
S2-> if B then .S0 ,call
S1-> if B then .S1 else S1 ,id
S2-> if B then .S1 else S2 ,id
S2-> if B then .S0 ,id
S1-> if B then .S1 else S1 ,while
S2-> if B then .S1 else S2 ,while
S2-> if B then .S0 ,while
S1-> if B then .S1 else S1 ,begin
S2-> if B then .S1 else S2 ,begin
S2-> if B then .S0 ,begin
S1-> if B then .S1 else S1 ,if
S2-> if B then .S1 else S2 ,if
S2-> if B then .S0 ,if
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,#
S0-> .begin S3 end ,proc
S0-> .begin S3 end ,record
S0-> .begin S3 end ,integer
S0-> .begin S3 end ,real
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I129:
S1-> if B then S1 .else S1 ,#
S2-> if B then S1 .else S2 ,#
S1-> if B then S1 .else S1 ,proc
S2-> if B then S1 .else S2 ,proc
S1-> if B then S1 .else S1 ,record
S2-> if B then S1 .else S2 ,record
S1-> if B then S1 .else S1 ,integer
S2-> if B then S1 .else S2 ,integer
S1-> if B then S1 .else S1 ,real
S2-> if B then S1 .else S2 ,real
S1-> if B then S1 .else S1 ,call
S2-> if B then S1 .else S2 ,call
S1-> if B then S1 .else S1 ,id
S2-> if B then S1 .else S2 ,id
S1-> if B then S1 .else S1 ,while
S2-> if B then S1 .else S2 ,while
S1-> if B then S1 .else S1 ,begin
S2-> if B then S1 .else S2 ,begin
S1-> if B then S1 .else S1 ,if
S2-> if B then S1 .else S2 ,if

I130:
S1-> if B then S1 else .S1 ,#
S2-> if B then S1 else .S2 ,#
S1-> if B then S1 else .S1 ,proc
S2-> if B then S1 else .S2 ,proc
S1-> if B then S1 else .S1 ,record
S2-> if B then S1 else .S2 ,record
S1-> if B then S1 else .S1 ,integer
S2-> if B then S1 else .S2 ,integer
S1-> if B then S1 else .S1 ,real
S2-> if B then S1 else .S2 ,real
S1-> if B then S1 else .S1 ,call
S2-> if B then S1 else .S2 ,call
S1-> if B then S1 else .S1 ,id
S2-> if B then S1 else .S2 ,id
S1-> if B then S1 else .S1 ,while
S2-> if B then S1 else .S2 ,while
S1-> if B then S1 else .S1 ,begin
S2-> if B then S1 else .S2 ,begin
S1-> if B then S1 else .S1 ,if
S2-> if B then S1 else .S2 ,if
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if

I131:
S1-> if B then S1 else S1. ,#
S1-> if B then S1 else S1. ,proc
S1-> if B then S1 else S1. ,record
S1-> if B then S1 else S1. ,integer
S1-> if B then S1 else S1. ,real
S1-> if B then S1 else S1. ,call
S1-> if B then S1 else S1. ,id
S1-> if B then S1 else S1. ,while
S1-> if B then S1 else S1. ,begin
S1-> if B then S1 else S1. ,if

I132:
S2-> if B then S1 else S2. ,#
S2-> if B then S1 else S2. ,proc
S2-> if B then S1 else S2. ,record
S2-> if B then S1 else S2. ,integer
S2-> if B then S1 else S2. ,real
S2-> if B then S1 else S2. ,call
S2-> if B then S1 else S2. ,id
S2-> if B then S1 else S2. ,while
S2-> if B then S1 else S2. ,begin
S2-> if B then S1 else S2. ,if

I133:
S1-> while .B do S0 ,#
S1-> while .B do S0 ,proc
S1-> while .B do S0 ,record
S1-> while .B do S0 ,integer
S1-> while .B do S0 ,real
S1-> while .B do S0 ,call
S1-> while .B do S0 ,id
S1-> while .B do S0 ,while
S1-> while .B do S0 ,begin
S1-> while .B do S0 ,if
B-> .B or B1 ,do
B-> .B1 ,do
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,do
B1-> .B2 ,do
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I134:
S1-> while B .do S0 ,#
S1-> while B .do S0 ,proc
S1-> while B .do S0 ,record
S1-> while B .do S0 ,integer
S1-> while B .do S0 ,real
S1-> while B .do S0 ,call
S1-> while B .do S0 ,id
S1-> while B .do S0 ,while
S1-> while B .do S0 ,begin
S1-> while B .do S0 ,if
B-> B .or B1 ,do
B-> B .or B1 ,or

I135:
S1-> while B do .S0 ,#
S1-> while B do .S0 ,proc
S1-> while B do .S0 ,record
S1-> while B do .S0 ,integer
S1-> while B do .S0 ,real
S1-> while B do .S0 ,call
S1-> while B do .S0 ,id
S1-> while B do .S0 ,while
S1-> while B do .S0 ,begin
S1-> while B do .S0 ,if
S0-> .begin S3 end ,#
S0-> .begin S3 end ,proc
S0-> .begin S3 end ,record
S0-> .begin S3 end ,integer
S0-> .begin S3 end ,real
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I136:
S1-> while B do S0. ,#
S1-> while B do S0. ,proc
S1-> while B do S0. ,record
S1-> while B do S0. ,integer
S1-> while B do S0. ,real
S1-> while B do S0. ,call
S1-> while B do S0. ,id
S1-> while B do S0. ,while
S1-> while B do S0. ,begin
S1-> while B do S0. ,if

I137:
S0-> begin .S3 end ,#
S0-> begin .S3 end ,proc
S0-> begin .S3 end ,record
S0-> begin .S3 end ,integer
S0-> begin .S3 end ,real
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I138:
S0-> begin S3 .end ,#
S0-> begin S3 .end ,proc
S0-> begin S3 .end ,record
S0-> begin S3 .end ,integer
S0-> begin S3 .end ,real
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I139:
S0-> begin S3 end. ,#
S0-> begin S3 end. ,proc
S0-> begin S3 end. ,record
S0-> begin S3 end. ,integer
S0-> begin S3 end. ,real
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I140:
S3-> S3 ; .S ,end
S3-> S3 ; .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I141:
S3-> S3 ; S. ,end
S3-> S3 ; S. ,;
S-> S .S ,end
S-> S .S ,;
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I142:
S-> S S. ,end
S-> S S. ,;
S-> S S. ,call
S-> S S. ,id
S-> S S. ,while
S-> S S. ,begin
S-> S S. ,if
S-> S .S ,end
S-> S .S ,;
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I143:
S-> id .= E ; ,end
S-> id .= E ; ,;
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,begin
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I144:
S-> id = .E ; ,end
S-> id = .E ; ,;
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,begin
S-> id = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I145:
S-> id = E .; ,end
S-> id = E .; ,;
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,begin
S-> id = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I146:
S-> id = E ;. ,end
S-> id = E ;. ,;
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,begin
S-> id = E ;. ,if

I147:
S-> L .= E ; ,end
S-> L .= E ; ,;
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,begin
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I148:
S-> L = .E ; ,end
S-> L = .E ; ,;
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,begin
S-> L = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I149:
S-> L = E .; ,end
S-> L = E .; ,;
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,begin
S-> L = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I150:
S-> L = E ;. ,end
S-> L = E ;. ,;
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,begin
S-> L = E ;. ,if

I151:
S-> S1. ,end
S-> S1. ,;
S-> S1. ,call
S-> S1. ,id
S-> S1. ,while
S-> S1. ,begin
S-> S1. ,if

I152:
S-> S2. ,end
S-> S2. ,;
S-> S2. ,call
S-> S2. ,id
S-> S2. ,while
S-> S2. ,begin
S-> S2. ,if

I153:
S-> call .id ( EL ) ,end
S-> call .id ( EL ) ,;
S-> call .id ( EL ) ,call
S-> call .id ( EL ) ,id
S-> call .id ( EL ) ,while
S-> call .id ( EL ) ,begin
S-> call .id ( EL ) ,if

I154:
S-> call id .( EL ) ,end
S-> call id .( EL ) ,;
S-> call id .( EL ) ,call
S-> call id .( EL ) ,id
S-> call id .( EL ) ,while
S-> call id .( EL ) ,begin
S-> call id .( EL ) ,if

I155:
S-> call id ( .EL ) ,end
S-> call id ( .EL ) ,;
S-> call id ( .EL ) ,call
S-> call id ( .EL ) ,id
S-> call id ( .EL ) ,while
S-> call id ( .EL ) ,begin
S-> call id ( .EL ) ,if
EL-> .EL , E ,)
EL-> .E ,)
EL-> .EL , E ,,
EL-> .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I156:
S-> call id ( EL .) ,end
S-> call id ( EL .) ,;
S-> call id ( EL .) ,call
S-> call id ( EL .) ,id
S-> call id ( EL .) ,while
S-> call id ( EL .) ,begin
S-> call id ( EL .) ,if
EL-> EL ., E ,)
EL-> EL ., E ,,

I157:
S-> call id ( EL ). ,end
S-> call id ( EL ). ,;
S-> call id ( EL ). ,call
S-> call id ( EL ). ,id
S-> call id ( EL ). ,while
S-> call id ( EL ). ,begin
S-> call id ( EL ). ,if

I158:
S1-> if .B then S1 else S1 ,end
S2-> if .B then S1 else S2 ,end
S2-> if .B then S0 ,end
S1-> if .B then S1 else S1 ,;
S2-> if .B then S1 else S2 ,;
S2-> if .B then S0 ,;
S1-> if .B then S1 else S1 ,call
S2-> if .B then S1 else S2 ,call
S2-> if .B then S0 ,call
S1-> if .B then S1 else S1 ,id
S2-> if .B then S1 else S2 ,id
S2-> if .B then S0 ,id
S1-> if .B then S1 else S1 ,while
S2-> if .B then S1 else S2 ,while
S2-> if .B then S0 ,while
S1-> if .B then S1 else S1 ,begin
S2-> if .B then S1 else S2 ,begin
S2-> if .B then S0 ,begin
S1-> if .B then S1 else S1 ,if
S2-> if .B then S1 else S2 ,if
S2-> if .B then S0 ,if
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I159:
S1-> if B .then S1 else S1 ,end
S2-> if B .then S1 else S2 ,end
S2-> if B .then S0 ,end
S1-> if B .then S1 else S1 ,;
S2-> if B .then S1 else S2 ,;
S2-> if B .then S0 ,;
S1-> if B .then S1 else S1 ,call
S2-> if B .then S1 else S2 ,call
S2-> if B .then S0 ,call
S1-> if B .then S1 else S1 ,id
S2-> if B .then S1 else S2 ,id
S2-> if B .then S0 ,id
S1-> if B .then S1 else S1 ,while
S2-> if B .then S1 else S2 ,while
S2-> if B .then S0 ,while
S1-> if B .then S1 else S1 ,begin
S2-> if B .then S1 else S2 ,begin
S2-> if B .then S0 ,begin
S1-> if B .then S1 else S1 ,if
S2-> if B .then S1 else S2 ,if
S2-> if B .then S0 ,if
B-> B .or B1 ,then
B-> B .or B1 ,or

I160:
S1-> if B then .S1 else S1 ,end
S2-> if B then .S1 else S2 ,end
S2-> if B then .S0 ,end
S1-> if B then .S1 else S1 ,;
S2-> if B then .S1 else S2 ,;
S2-> if B then .S0 ,;
S1-> if B then .S1 else S1 ,call
S2-> if B then .S1 else S2 ,call
S2-> if B then .S0 ,call
S1-> if B then .S1 else S1 ,id
S2-> if B then .S1 else S2 ,id
S2-> if B then .S0 ,id
S1-> if B then .S1 else S1 ,while
S2-> if B then .S1 else S2 ,while
S2-> if B then .S0 ,while
S1-> if B then .S1 else S1 ,begin
S2-> if B then .S1 else S2 ,begin
S2-> if B then .S0 ,begin
S1-> if B then .S1 else S1 ,if
S2-> if B then .S1 else S2 ,if
S2-> if B then .S0 ,if
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,end
S0-> .begin S3 end ,;
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I161:
S1-> if B then S1 .else S1 ,end
S2-> if B then S1 .else S2 ,end
S1-> if B then S1 .else S1 ,;
S2-> if B then S1 .else S2 ,;
S1-> if B then S1 .else S1 ,call
S2-> if B then S1 .else S2 ,call
S1-> if B then S1 .else S1 ,id
S2-> if B then S1 .else S2 ,id
S1-> if B then S1 .else S1 ,while
S2-> if B then S1 .else S2 ,while
S1-> if B then S1 .else S1 ,begin
S2-> if B then S1 .else S2 ,begin
S1-> if B then S1 .else S1 ,if
S2-> if B then S1 .else S2 ,if

I162:
S1-> if B then S1 else .S1 ,end
S2-> if B then S1 else .S2 ,end
S1-> if B then S1 else .S1 ,;
S2-> if B then S1 else .S2 ,;
S1-> if B then S1 else .S1 ,call
S2-> if B then S1 else .S2 ,call
S1-> if B then S1 else .S1 ,id
S2-> if B then S1 else .S2 ,id
S1-> if B then S1 else .S1 ,while
S2-> if B then S1 else .S2 ,while
S1-> if B then S1 else .S1 ,begin
S2-> if B then S1 else .S2 ,begin
S1-> if B then S1 else .S1 ,if
S2-> if B then S1 else .S2 ,if
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if

I163:
S1-> if B then S1 else S1. ,end
S1-> if B then S1 else S1. ,;
S1-> if B then S1 else S1. ,call
S1-> if B then S1 else S1. ,id
S1-> if B then S1 else S1. ,while
S1-> if B then S1 else S1. ,begin
S1-> if B then S1 else S1. ,if

I164:
S2-> if B then S1 else S2. ,end
S2-> if B then S1 else S2. ,;
S2-> if B then S1 else S2. ,call
S2-> if B then S1 else S2. ,id
S2-> if B then S1 else S2. ,while
S2-> if B then S1 else S2. ,begin
S2-> if B then S1 else S2. ,if

I165:
S1-> while .B do S0 ,end
S1-> while .B do S0 ,;
S1-> while .B do S0 ,call
S1-> while .B do S0 ,id
S1-> while .B do S0 ,while
S1-> while .B do S0 ,begin
S1-> while .B do S0 ,if
B-> .B or B1 ,do
B-> .B1 ,do
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,do
B1-> .B2 ,do
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I166:
S1-> while B .do S0 ,end
S1-> while B .do S0 ,;
S1-> while B .do S0 ,call
S1-> while B .do S0 ,id
S1-> while B .do S0 ,while
S1-> while B .do S0 ,begin
S1-> while B .do S0 ,if
B-> B .or B1 ,do
B-> B .or B1 ,or

I167:
S1-> while B do .S0 ,end
S1-> while B do .S0 ,;
S1-> while B do .S0 ,call
S1-> while B do .S0 ,id
S1-> while B do .S0 ,while
S1-> while B do .S0 ,begin
S1-> while B do .S0 ,if
S0-> .begin S3 end ,end
S0-> .begin S3 end ,;
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I168:
S1-> while B do S0. ,end
S1-> while B do S0. ,;
S1-> while B do S0. ,call
S1-> while B do S0. ,id
S1-> while B do S0. ,while
S1-> while B do S0. ,begin
S1-> while B do S0. ,if

I169:
S0-> begin .S3 end ,end
S0-> begin .S3 end ,;
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I170:
S0-> begin S3 .end ,end
S0-> begin S3 .end ,;
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I171:
S0-> begin S3 end. ,end
S0-> begin S3 end. ,;
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I172:
S3-> S. ,end
S3-> S. ,;
S-> S .S ,end
S-> S .S ,;
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I173:
S1-> begin .S3 end ,end
S2-> begin .S3 end ,end
S1-> begin .S3 end ,;
S2-> begin .S3 end ,;
S1-> begin .S3 end ,call
S2-> begin .S3 end ,call
S1-> begin .S3 end ,id
S2-> begin .S3 end ,id
S1-> begin .S3 end ,while
S2-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S2-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I174:
S1-> begin S3 .end ,end
S2-> begin S3 .end ,end
S1-> begin S3 .end ,;
S2-> begin S3 .end ,;
S1-> begin S3 .end ,call
S2-> begin S3 .end ,call
S1-> begin S3 .end ,id
S2-> begin S3 .end ,id
S1-> begin S3 .end ,while
S2-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S2-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I175:
S1-> begin S3 end. ,end
S2-> begin S3 end. ,end
S1-> begin S3 end. ,;
S2-> begin S3 end. ,;
S1-> begin S3 end. ,call
S2-> begin S3 end. ,call
S1-> begin S3 end. ,id
S2-> begin S3 end. ,id
S1-> begin S3 end. ,while
S2-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S2-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,if

I176:
S1-> if .B then S1 else S1 ,end
S2-> if .B then S1 else S2 ,end
S2-> if .B then S0 ,end
S1-> if .B then S1 else S1 ,;
S2-> if .B then S1 else S2 ,;
S2-> if .B then S0 ,;
S1-> if .B then S1 else S1 ,call
S1-> if .B then S1 else S1 ,id
S1-> if .B then S1 else S1 ,while
S1-> if .B then S1 else S1 ,begin
S1-> if .B then S1 else S1 ,if
S2-> if .B then S1 else S2 ,call
S2-> if .B then S0 ,call
S2-> if .B then S1 else S2 ,id
S2-> if .B then S0 ,id
S2-> if .B then S1 else S2 ,while
S2-> if .B then S0 ,while
S2-> if .B then S1 else S2 ,begin
S2-> if .B then S0 ,begin
S2-> if .B then S1 else S2 ,if
S2-> if .B then S0 ,if
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I177:
S1-> if B .then S1 else S1 ,end
S2-> if B .then S1 else S2 ,end
S2-> if B .then S0 ,end
S1-> if B .then S1 else S1 ,;
S2-> if B .then S1 else S2 ,;
S2-> if B .then S0 ,;
S1-> if B .then S1 else S1 ,call
S1-> if B .then S1 else S1 ,id
S1-> if B .then S1 else S1 ,while
S1-> if B .then S1 else S1 ,begin
S1-> if B .then S1 else S1 ,if
S2-> if B .then S1 else S2 ,call
S2-> if B .then S0 ,call
S2-> if B .then S1 else S2 ,id
S2-> if B .then S0 ,id
S2-> if B .then S1 else S2 ,while
S2-> if B .then S0 ,while
S2-> if B .then S1 else S2 ,begin
S2-> if B .then S0 ,begin
S2-> if B .then S1 else S2 ,if
S2-> if B .then S0 ,if
B-> B .or B1 ,then
B-> B .or B1 ,or

I178:
S1-> if B then .S1 else S1 ,end
S2-> if B then .S1 else S2 ,end
S2-> if B then .S0 ,end
S1-> if B then .S1 else S1 ,;
S2-> if B then .S1 else S2 ,;
S2-> if B then .S0 ,;
S1-> if B then .S1 else S1 ,call
S1-> if B then .S1 else S1 ,id
S1-> if B then .S1 else S1 ,while
S1-> if B then .S1 else S1 ,begin
S1-> if B then .S1 else S1 ,if
S2-> if B then .S1 else S2 ,call
S2-> if B then .S0 ,call
S2-> if B then .S1 else S2 ,id
S2-> if B then .S0 ,id
S2-> if B then .S1 else S2 ,while
S2-> if B then .S0 ,while
S2-> if B then .S1 else S2 ,begin
S2-> if B then .S0 ,begin
S2-> if B then .S1 else S2 ,if
S2-> if B then .S0 ,if
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,end
S0-> .begin S3 end ,;
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I179:
S1-> if B then S1 .else S1 ,end
S2-> if B then S1 .else S2 ,end
S1-> if B then S1 .else S1 ,;
S2-> if B then S1 .else S2 ,;
S1-> if B then S1 .else S1 ,call
S1-> if B then S1 .else S1 ,id
S1-> if B then S1 .else S1 ,while
S1-> if B then S1 .else S1 ,begin
S1-> if B then S1 .else S1 ,if
S2-> if B then S1 .else S2 ,call
S2-> if B then S1 .else S2 ,id
S2-> if B then S1 .else S2 ,while
S2-> if B then S1 .else S2 ,begin
S2-> if B then S1 .else S2 ,if

I180:
S1-> if B then S1 else .S1 ,end
S2-> if B then S1 else .S2 ,end
S1-> if B then S1 else .S1 ,;
S2-> if B then S1 else .S2 ,;
S1-> if B then S1 else .S1 ,call
S1-> if B then S1 else .S1 ,id
S1-> if B then S1 else .S1 ,while
S1-> if B then S1 else .S1 ,begin
S1-> if B then S1 else .S1 ,if
S2-> if B then S1 else .S2 ,call
S2-> if B then S1 else .S2 ,id
S2-> if B then S1 else .S2 ,while
S2-> if B then S1 else .S2 ,begin
S2-> if B then S1 else .S2 ,if
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if

I181:
S1-> begin .S3 end ,end
S2-> begin .S3 end ,end
S1-> begin .S3 end ,;
S2-> begin .S3 end ,;
S1-> begin .S3 end ,call
S1-> begin .S3 end ,id
S1-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,call
S2-> begin .S3 end ,id
S2-> begin .S3 end ,while
S2-> begin .S3 end ,begin
S2-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I182:
S1-> begin S3 .end ,end
S2-> begin S3 .end ,end
S1-> begin S3 .end ,;
S2-> begin S3 .end ,;
S1-> begin S3 .end ,call
S1-> begin S3 .end ,id
S1-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,call
S2-> begin S3 .end ,id
S2-> begin S3 .end ,while
S2-> begin S3 .end ,begin
S2-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I183:
S1-> begin S3 end. ,end
S2-> begin S3 end. ,end
S1-> begin S3 end. ,;
S2-> begin S3 end. ,;
S1-> begin S3 end. ,call
S1-> begin S3 end. ,id
S1-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,call
S2-> begin S3 end. ,id
S2-> begin S3 end. ,while
S2-> begin S3 end. ,begin
S2-> begin S3 end. ,if

I184:
S2-> if B then S0. ,end
S2-> if B then S0. ,;
S2-> if B then S0. ,call
S2-> if B then S0. ,id
S2-> if B then S0. ,while
S2-> if B then S0. ,begin
S2-> if B then S0. ,if

I185:
S1-> if .B then S1 else S1 ,else
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I186:
S1-> if B .then S1 else S1 ,else
B-> B .or B1 ,then
B-> B .or B1 ,or

I187:
S1-> if B then .S1 else S1 ,else
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else

I188:
S1-> if B then S1 .else S1 ,else

I189:
S1-> if B then S1 else .S1 ,else
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else

I190:
S1-> if B then S1 else S1. ,else

I191:
S1-> while .B do S0 ,else
B-> .B or B1 ,do
B-> .B1 ,do
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,do
B1-> .B2 ,do
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I192:
S1-> while B .do S0 ,else
B-> B .or B1 ,do
B-> B .or B1 ,or

I193:
S1-> while B do .S0 ,else
S0-> .begin S3 end ,else

I194:
S1-> while B do S0. ,else

I195:
S0-> begin .S3 end ,else
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I196:
S0-> begin S3 .end ,else
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I197:
S0-> begin S3 end. ,else

I198:
B-> B or .B1 ,do
B-> B or .B1 ,or
B1-> .B1 and B2 ,do
B1-> .B2 ,do
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I199:
B-> B or B1. ,do
B-> B or B1. ,or
B1-> B1 .and B2 ,do
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I200:
B1-> B1 and .B2 ,do
B1-> B1 and .B2 ,or
B1-> B1 and .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I201:
B1-> B1 and B2. ,do
B1-> B1 and B2. ,or
B1-> B1 and B2. ,and

I202:
B2-> not .B ,do
B2-> not .B ,or
B2-> not .B ,and
B-> .B or B1 ,do
B-> .B1 ,do
B-> .B or B1 ,or
B-> .B1 ,or
B-> .B or B1 ,and
B-> .B1 ,and
B1-> .B1 and B2 ,do
B1-> .B2 ,do
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I203:
B2-> not B. ,do
B2-> not B. ,or
B2-> not B. ,and
B-> B .or B1 ,do
B-> B .or B1 ,or
B-> B .or B1 ,and

I204:
B-> B or .B1 ,do
B-> B or .B1 ,or
B-> B or .B1 ,and
B1-> .B1 and B2 ,do
B1-> .B2 ,do
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I205:
B-> B or B1. ,do
B-> B or B1. ,or
B-> B or B1. ,and
B1-> B1 .and B2 ,do
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I206:
B1-> B2. ,do
B1-> B2. ,or
B1-> B2. ,and

I207:
B2-> ( .B ) ,do
B2-> ( .B ) ,or
B2-> ( .B ) ,and
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,+
E2-> ( .E ) ,*
B-> .B or B1 ,)
B-> .B1 ,)
E-> .E + E1 ,)
E-> .E1 ,)
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,)
B1-> .B2 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=

I208:
B2-> ( B .) ,do
B2-> ( B .) ,or
B2-> ( B .) ,and
B-> B .or B1 ,)
B-> B .or B1 ,or

I209:
B2-> ( B ). ,do
B2-> ( B ). ,or
B2-> ( B ). ,and

I210:
B-> B or .B1 ,)
B-> B or .B1 ,or
B1-> .B1 and B2 ,)
B1-> .B2 ,)
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I211:
B-> B or B1. ,)
B-> B or B1. ,or
B1-> B1 .and B2 ,)
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I212:
B1-> B1 and .B2 ,)
B1-> B1 and .B2 ,or
B1-> B1 and .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I213:
B1-> B1 and B2. ,)
B1-> B1 and B2. ,or
B1-> B1 and B2. ,and

I214:
B2-> not .B ,)
B2-> not .B ,or
B2-> not .B ,and
B-> .B or B1 ,)
B-> .B1 ,)
B-> .B or B1 ,or
B-> .B1 ,or
B-> .B or B1 ,and
B-> .B1 ,and
B1-> .B1 and B2 ,)
B1-> .B2 ,)
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I215:
B2-> not B. ,)
B2-> not B. ,or
B2-> not B. ,and
B-> B .or B1 ,)
B-> B .or B1 ,or
B-> B .or B1 ,and

I216:
B-> B or .B1 ,)
B-> B or .B1 ,or
B-> B or .B1 ,and
B1-> .B1 and B2 ,)
B1-> .B2 ,)
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I217:
B-> B or B1. ,)
B-> B or B1. ,or
B-> B or B1. ,and
B1-> B1 .and B2 ,)
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I218:
B1-> B2. ,)
B1-> B2. ,or
B1-> B2. ,and

I219:
B2-> ( .B ) ,)
B2-> ( .B ) ,or
B2-> ( .B ) ,and
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,+
E2-> ( .E ) ,*
B-> .B or B1 ,)
B-> .B1 ,)
E-> .E + E1 ,)
E-> .E1 ,)
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,)
B1-> .B2 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=

I220:
B2-> ( B .) ,)
B2-> ( B .) ,or
B2-> ( B .) ,and
B-> B .or B1 ,)
B-> B .or B1 ,or

I221:
B2-> ( B ). ,)
B2-> ( B ). ,or
B2-> ( B ). ,and

I222:
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+
B2-> E .R E ,)
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I223:
E2-> ( E ). ,==
E2-> ( E ). ,<=
E2-> ( E ). ,!=
E2-> ( E ). ,<
E2-> ( E ). ,>
E2-> ( E ). ,>=
E2-> ( E ). ,+
E2-> ( E ). ,*

I224:
E-> E + .E1 ,)
E-> E + .E1 ,+
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I225:
E-> E + E1. ,)
E-> E + E1. ,+
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,*

I226:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,==
E1-> E1 * .E2 ,<=
E1-> E1 * .E2 ,!=
E1-> E1 * .E2 ,<
E1-> E1 * .E2 ,>
E1-> E1 * .E2 ,>=
E1-> E1 * .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I227:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,+
E1-> E1 * E2. ,==
E1-> E1 * E2. ,<=
E1-> E1 * E2. ,!=
E1-> E1 * E2. ,<
E1-> E1 * E2. ,>
E1-> E1 * E2. ,>=
E1-> E1 * E2. ,*

I228:
E2-> ( .E ) ,)
E2-> ( .E ) ,+
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I229:
E2-> ( E .) ,)
E2-> ( E .) ,+
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I230:
E2-> ( E ). ,)
E2-> ( E ). ,+
E2-> ( E ). ,==
E2-> ( E ). ,<=
E2-> ( E ). ,!=
E2-> ( E ). ,<
E2-> ( E ). ,>
E2-> ( E ). ,>=
E2-> ( E ). ,*

I231:
E2-> - .E ,)
E2-> - .E ,+
E2-> - .E ,==
E2-> - .E ,<=
E2-> - .E ,!=
E2-> - .E ,<
E2-> - .E ,>
E2-> - .E ,>=
E2-> - .E ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,==
E-> .E1 ,==
E-> .E + E1 ,<=
E-> .E1 ,<=
E-> .E + E1 ,!=
E-> .E1 ,!=
E-> .E + E1 ,<
E-> .E1 ,<
E-> .E + E1 ,>
E-> .E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,>=
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I232:
E2-> - E. ,)
E2-> - E. ,+
E2-> - E. ,==
E2-> - E. ,<=
E2-> - E. ,!=
E2-> - E. ,<
E2-> - E. ,>
E2-> - E. ,>=
E2-> - E. ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,*

I233:
E-> E + .E1 ,)
E-> E + .E1 ,+
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E-> E + .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I234:
E-> E + E1. ,)
E-> E + E1. ,+
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E-> E + E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,*

I235:
E1-> E2. ,)
E1-> E2. ,+
E1-> E2. ,==
E1-> E2. ,<=
E1-> E2. ,!=
E1-> E2. ,<
E1-> E2. ,>
E1-> E2. ,>=
E1-> E2. ,*

I236:
E2-> id. ,)
E2-> id. ,+
E2-> id. ,==
E2-> id. ,<=
E2-> id. ,!=
E2-> id. ,<
E2-> id. ,>
E2-> id. ,>=
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,+
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I237:
L-> id [ .E ] ,)
L-> id [ .E ] ,+
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I238:
L-> id [ E .] ,)
L-> id [ E .] ,+
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I239:
L-> id [ E ]. ,)
L-> id [ E ]. ,+
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I240:
E2-> num. ,)
E2-> num. ,+
E2-> num. ,==
E2-> num. ,<=
E2-> num. ,!=
E2-> num. ,<
E2-> num. ,>
E2-> num. ,>=
E2-> num. ,*

I241:
E2-> L. ,)
E2-> L. ,+
E2-> L. ,==
E2-> L. ,<=
E2-> L. ,!=
E2-> L. ,<
E2-> L. ,>
E2-> L. ,>=
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,+
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I242:
L-> L [ .E ] ,)
L-> L [ .E ] ,+
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I243:
L-> L [ E .] ,)
L-> L [ E .] ,+
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I244:
L-> L [ E ]. ,)
L-> L [ E ]. ,+
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I245:
E-> E1. ,)
E-> E1. ,+
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E-> E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,*

I246:
B2-> E R .E ,)
B2-> E R .E ,or
B2-> E R .E ,and
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I247:
B2-> E R E. ,)
B2-> E R E. ,or
B2-> E R E. ,and
E-> E .+ E1 ,)
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+

I248:
E-> E + .E1 ,)
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I249:
E-> E + E1. ,)
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I250:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,or
E1-> E1 * .E2 ,and
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I251:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,or
E1-> E1 * E2. ,and
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I252:
E2-> ( .E ) ,)
E2-> ( .E ) ,or
E2-> ( .E ) ,and
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I253:
E2-> ( E .) ,)
E2-> ( E .) ,or
E2-> ( E .) ,and
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I254:
E2-> ( E ). ,)
E2-> ( E ). ,or
E2-> ( E ). ,and
E2-> ( E ). ,+
E2-> ( E ). ,*

I255:
E2-> - .E ,)
E2-> - .E ,or
E2-> - .E ,and
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I256:
E2-> - E. ,)
E2-> - E. ,or
E2-> - E. ,and
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I257:
E-> E + .E1 ,)
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I258:
E-> E + E1. ,)
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I259:
E1-> E2. ,)
E1-> E2. ,or
E1-> E2. ,and
E1-> E2. ,+
E1-> E2. ,*

I260:
E2-> id. ,)
E2-> id. ,or
E2-> id. ,and
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,or
L-> id .[ E ] ,and
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I261:
L-> id [ .E ] ,)
L-> id [ .E ] ,or
L-> id [ .E ] ,and
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I262:
L-> id [ E .] ,)
L-> id [ E .] ,or
L-> id [ E .] ,and
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I263:
L-> id [ E ]. ,)
L-> id [ E ]. ,or
L-> id [ E ]. ,and
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I264:
E2-> num. ,)
E2-> num. ,or
E2-> num. ,and
E2-> num. ,+
E2-> num. ,*

I265:
E2-> L. ,)
E2-> L. ,or
E2-> L. ,and
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,or
L-> L .[ E ] ,and
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I266:
L-> L [ .E ] ,)
L-> L [ .E ] ,or
L-> L [ .E ] ,and
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I267:
L-> L [ E .] ,)
L-> L [ E .] ,or
L-> L [ E .] ,and
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I268:
L-> L [ E ]. ,)
L-> L [ E ]. ,or
L-> L [ E ]. ,and
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I269:
E-> E1. ,)
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I270:
E-> E1. ,)
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I271:
R-> <. ,num
R-> <. ,(
R-> <. ,id
R-> <. ,-

I272:
R-> <=. ,num
R-> <=. ,(
R-> <=. ,id
R-> <=. ,-

I273:
R-> ==. ,num
R-> ==. ,(
R-> ==. ,id
R-> ==. ,-

I274:
R-> !=. ,num
R-> !=. ,(
R-> !=. ,id
R-> !=. ,-

I275:
R-> >. ,num
R-> >. ,(
R-> >. ,id
R-> >. ,-

I276:
R-> >=. ,num
R-> >=. ,(
R-> >=. ,id
R-> >=. ,-

I277:
B-> B1. ,)
B-> B1. ,or
B1-> B1 .and B2 ,)
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I278:
E-> E1. ,)
E-> E1. ,+
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=

I279:
E1-> E1 * .E2 ,)
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E1-> E1 * .E2 ,==
E1-> E1 * .E2 ,<=
E1-> E1 * .E2 ,!=
E1-> E1 * .E2 ,<
E1-> E1 * .E2 ,>
E1-> E1 * .E2 ,>=
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I280:
E1-> E1 * E2. ,)
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*
E1-> E1 * E2. ,==
E1-> E1 * E2. ,<=
E1-> E1 * E2. ,!=
E1-> E1 * E2. ,<
E1-> E1 * E2. ,>
E1-> E1 * E2. ,>=

I281:
E2-> ( .E ) ,)
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I282:
E2-> ( E .) ,)
E2-> ( E .) ,+
E2-> ( E .) ,*
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I283:
E2-> ( E ). ,)
E2-> ( E ). ,+
E2-> ( E ). ,*
E2-> ( E ). ,==
E2-> ( E ). ,<=
E2-> ( E ). ,!=
E2-> ( E ). ,<
E2-> ( E ). ,>
E2-> ( E ). ,>=

I284:
E2-> - .E ,)
E2-> - .E ,+
E2-> - .E ,*
E2-> - .E ,==
E2-> - .E ,<=
E2-> - .E ,!=
E2-> - .E ,<
E2-> - .E ,>
E2-> - .E ,>=
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E-> .E + E1 ,==
E-> .E1 ,==
E-> .E + E1 ,<=
E-> .E1 ,<=
E-> .E + E1 ,!=
E-> .E1 ,!=
E-> .E + E1 ,<
E-> .E1 ,<
E-> .E + E1 ,>
E-> .E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,>=
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I285:
E2-> - E. ,)
E2-> - E. ,+
E2-> - E. ,*
E2-> - E. ,==
E2-> - E. ,<=
E2-> - E. ,!=
E2-> - E. ,<
E2-> - E. ,>
E2-> - E. ,>=
E-> E .+ E1 ,)
E-> E .+ E1 ,+
E-> E .+ E1 ,*
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=

I286:
E-> E + .E1 ,)
E-> E + .E1 ,+
E-> E + .E1 ,*
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I287:
E-> E + E1. ,)
E-> E + E1. ,+
E-> E + E1. ,*
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=

I288:
E1-> E2. ,)
E1-> E2. ,+
E1-> E2. ,*
E1-> E2. ,==
E1-> E2. ,<=
E1-> E2. ,!=
E1-> E2. ,<
E1-> E2. ,>
E1-> E2. ,>=

I289:
E2-> id. ,)
E2-> id. ,+
E2-> id. ,*
E2-> id. ,==
E2-> id. ,<=
E2-> id. ,!=
E2-> id. ,<
E2-> id. ,>
E2-> id. ,>=
L-> id .[ E ] ,)
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=
L-> id .[ E ] ,[

I290:
L-> id [ .E ] ,)
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I291:
L-> id [ E .] ,)
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I292:
L-> id [ E ]. ,)
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=
L-> id [ E ]. ,[

I293:
E2-> num. ,)
E2-> num. ,+
E2-> num. ,*
E2-> num. ,==
E2-> num. ,<=
E2-> num. ,!=
E2-> num. ,<
E2-> num. ,>
E2-> num. ,>=

I294:
E2-> L. ,)
E2-> L. ,+
E2-> L. ,*
E2-> L. ,==
E2-> L. ,<=
E2-> L. ,!=
E2-> L. ,<
E2-> L. ,>
E2-> L. ,>=
L-> L .[ E ] ,)
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=
L-> L .[ E ] ,[

I295:
L-> L [ .E ] ,)
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I296:
L-> L [ E .] ,)
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I297:
L-> L [ E ]. ,)
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=
L-> L [ E ]. ,[

I298:
E-> E1. ,)
E-> E1. ,+
E-> E1. ,*
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E1-> E1 .* E2 ,)
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=

I299:
B2-> ( .B ) ,)
E2-> ( .E ) ,)
B2-> ( .B ) ,or
B2-> ( .B ) ,and
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
B-> .B or B1 ,)
B-> .B1 ,)
E-> .E + E1 ,)
E-> .E1 ,)
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,)
B1-> .B2 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=

I300:
E2-> ( E .) ,)
E2-> ( E .) ,+
E2-> ( E .) ,*
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E-> E .+ E1 ,)
E-> E .+ E1 ,+
B2-> E .R E ,)
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I301:
B2-> true. ,)
B2-> true. ,or
B2-> true. ,and

I302:
B2-> false. ,)
B2-> false. ,or
B2-> false. ,and

I303:
E2-> id. ,)
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[
E2-> id. ,==
E2-> id. ,<=
E2-> id. ,!=
E2-> id. ,<
E2-> id. ,>
E2-> id. ,>=
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=

I304:
L-> id [ .E ] ,)
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I305:
L-> id [ E .] ,)
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I306:
L-> id [ E ]. ,)
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=

I307:
E2-> L. ,)
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[
E2-> L. ,==
E2-> L. ,<=
E2-> L. ,!=
E2-> L. ,<
E2-> L. ,>
E2-> L. ,>=
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=

I308:
L-> L [ .E ] ,)
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I309:
L-> L [ E .] ,)
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I310:
L-> L [ E ]. ,)
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=

I311:
B2-> E .R E ,)
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,+
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I312:
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E-> E + .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I313:
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E-> E + E1. ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I314:
E1-> E1 * .E2 ,==
E1-> E1 * .E2 ,<=
E1-> E1 * .E2 ,!=
E1-> E1 * .E2 ,<
E1-> E1 * .E2 ,>
E1-> E1 * .E2 ,>=
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I315:
E1-> E1 * E2. ,==
E1-> E1 * E2. ,<=
E1-> E1 * E2. ,!=
E1-> E1 * E2. ,<
E1-> E1 * E2. ,>
E1-> E1 * E2. ,>=
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I316:
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I317:
E2-> ( E .) ,==
E2-> ( E .) ,<=
E2-> ( E .) ,!=
E2-> ( E .) ,<
E2-> ( E .) ,>
E2-> ( E .) ,>=
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I318:
E2-> - .E ,==
E2-> - .E ,<=
E2-> - .E ,!=
E2-> - .E ,<
E2-> - .E ,>
E2-> - .E ,>=
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,==
E-> .E1 ,==
E-> .E + E1 ,<=
E-> .E1 ,<=
E-> .E + E1 ,!=
E-> .E1 ,!=
E-> .E + E1 ,<
E-> .E1 ,<
E-> .E + E1 ,>
E-> .E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I319:
E2-> - E. ,==
E2-> - E. ,<=
E2-> - E. ,!=
E2-> - E. ,<
E2-> - E. ,>
E2-> - E. ,>=
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I320:
E-> E + .E1 ,==
E-> E + .E1 ,<=
E-> E + .E1 ,!=
E-> E + .E1 ,<
E-> E + .E1 ,>
E-> E + .E1 ,>=
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I321:
E-> E + E1. ,==
E-> E + E1. ,<=
E-> E + E1. ,!=
E-> E + E1. ,<
E-> E + E1. ,>
E-> E + E1. ,>=
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I322:
E1-> E2. ,==
E1-> E2. ,<=
E1-> E2. ,!=
E1-> E2. ,<
E1-> E2. ,>
E1-> E2. ,>=
E1-> E2. ,+
E1-> E2. ,*

I323:
E2-> id. ,==
E2-> id. ,<=
E2-> id. ,!=
E2-> id. ,<
E2-> id. ,>
E2-> id. ,>=
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I324:
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I325:
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I326:
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I327:
E2-> num. ,==
E2-> num. ,<=
E2-> num. ,!=
E2-> num. ,<
E2-> num. ,>
E2-> num. ,>=
E2-> num. ,+
E2-> num. ,*

I328:
E2-> L. ,==
E2-> L. ,<=
E2-> L. ,!=
E2-> L. ,<
E2-> L. ,>
E2-> L. ,>=
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I329:
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I330:
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I331:
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I332:
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I333:
E-> E1. ,==
E-> E1. ,<=
E-> E1. ,!=
E-> E1. ,<
E-> E1. ,>
E-> E1. ,>=
E-> E1. ,+
E1-> E1 .* E2 ,==
E1-> E1 .* E2 ,<=
E1-> E1 .* E2 ,!=
E1-> E1 .* E2 ,<
E1-> E1 .* E2 ,>
E1-> E1 .* E2 ,>=
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I334:
B-> B1. ,)
B-> B1. ,or
B-> B1. ,and
B1-> B1 .and B2 ,)
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I335:
B2-> E .R E ,do
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,+
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I336:
B2-> E R .E ,do
B2-> E R .E ,or
B2-> E R .E ,and
E-> .E + E1 ,do
E-> .E1 ,do
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,do
E1-> .E2 ,do
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I337:
B2-> E R E. ,do
B2-> E R E. ,or
B2-> E R E. ,and
E-> E .+ E1 ,do
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+

I338:
E-> E + .E1 ,do
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E1-> .E1 * E2 ,do
E1-> .E2 ,do
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I339:
E-> E + E1. ,do
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E1-> E1 .* E2 ,do
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I340:
E1-> E1 * .E2 ,do
E1-> E1 * .E2 ,or
E1-> E1 * .E2 ,and
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I341:
E1-> E1 * E2. ,do
E1-> E1 * E2. ,or
E1-> E1 * E2. ,and
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I342:
E2-> ( .E ) ,do
E2-> ( .E ) ,or
E2-> ( .E ) ,and
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I343:
E2-> ( E .) ,do
E2-> ( E .) ,or
E2-> ( E .) ,and
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I344:
E2-> ( E ). ,do
E2-> ( E ). ,or
E2-> ( E ). ,and
E2-> ( E ). ,+
E2-> ( E ). ,*

I345:
E2-> - .E ,do
E2-> - .E ,or
E2-> - .E ,and
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,do
E-> .E1 ,do
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,do
E1-> .E2 ,do
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I346:
E2-> - E. ,do
E2-> - E. ,or
E2-> - E. ,and
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,do
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I347:
E-> E + .E1 ,do
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,do
E1-> .E2 ,do
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,do
E2-> .- E ,do
E2-> .id ,do
E2-> .num ,do
E2-> .L ,do
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I348:
E-> E + E1. ,do
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,do
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I349:
E1-> E2. ,do
E1-> E2. ,or
E1-> E2. ,and
E1-> E2. ,+
E1-> E2. ,*

I350:
E2-> id. ,do
E2-> id. ,or
E2-> id. ,and
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,do
L-> id .[ E ] ,or
L-> id .[ E ] ,and
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I351:
L-> id [ .E ] ,do
L-> id [ .E ] ,or
L-> id [ .E ] ,and
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I352:
L-> id [ E .] ,do
L-> id [ E .] ,or
L-> id [ E .] ,and
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I353:
L-> id [ E ]. ,do
L-> id [ E ]. ,or
L-> id [ E ]. ,and
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I354:
E2-> num. ,do
E2-> num. ,or
E2-> num. ,and
E2-> num. ,+
E2-> num. ,*

I355:
E2-> L. ,do
E2-> L. ,or
E2-> L. ,and
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,do
L-> L .[ E ] ,or
L-> L .[ E ] ,and
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I356:
L-> L [ .E ] ,do
L-> L [ .E ] ,or
L-> L [ .E ] ,and
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I357:
L-> L [ E .] ,do
L-> L [ E .] ,or
L-> L [ E .] ,and
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I358:
L-> L [ E ]. ,do
L-> L [ E ]. ,or
L-> L [ E ]. ,and
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I359:
E-> E1. ,do
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,do
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I360:
E-> E1. ,do
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E1-> E1 .* E2 ,do
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I361:
B2-> true. ,do
B2-> true. ,or
B2-> true. ,and

I362:
B2-> false. ,do
B2-> false. ,or
B2-> false. ,and

I363:
B-> B1. ,do
B-> B1. ,or
B-> B1. ,and
B1-> B1 .and B2 ,do
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I364:
B-> B1. ,do
B-> B1. ,or
B1-> B1 .and B2 ,do
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I365:
S1-> begin .S3 end ,else
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I366:
S1-> begin S3 .end ,else
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I367:
S1-> begin S3 end. ,else

I368:
B-> B or .B1 ,then
B-> B or .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I369:
B-> B or B1. ,then
B-> B or B1. ,or
B1-> B1 .and B2 ,then
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I370:
B1-> B1 and .B2 ,then
B1-> B1 and .B2 ,or
B1-> B1 and .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I371:
B1-> B1 and B2. ,then
B1-> B1 and B2. ,or
B1-> B1 and B2. ,and

I372:
B2-> not .B ,then
B2-> not .B ,or
B2-> not .B ,and
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B-> .B or B1 ,and
B-> .B1 ,and
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I373:
B2-> not B. ,then
B2-> not B. ,or
B2-> not B. ,and
B-> B .or B1 ,then
B-> B .or B1 ,or
B-> B .or B1 ,and

I374:
B-> B or .B1 ,then
B-> B or .B1 ,or
B-> B or .B1 ,and
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I375:
B-> B or B1. ,then
B-> B or B1. ,or
B-> B or B1. ,and
B1-> B1 .and B2 ,then
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I376:
B1-> B2. ,then
B1-> B2. ,or
B1-> B2. ,and

I377:
B2-> ( .B ) ,then
B2-> ( .B ) ,or
B2-> ( .B ) ,and
E2-> ( .E ) ,==
E2-> ( .E ) ,<=
E2-> ( .E ) ,!=
E2-> ( .E ) ,<
E2-> ( .E ) ,>
E2-> ( .E ) ,>=
E2-> ( .E ) ,+
E2-> ( .E ) ,*
B-> .B or B1 ,)
B-> .B1 ,)
E-> .E + E1 ,)
E-> .E1 ,)
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,)
B1-> .B2 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,)
B2-> .( B ) ,)
B2-> .E R E ,)
B2-> .true ,)
B2-> .false ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=

I378:
B2-> ( B .) ,then
B2-> ( B .) ,or
B2-> ( B .) ,and
B-> B .or B1 ,)
B-> B .or B1 ,or

I379:
B2-> ( B ). ,then
B2-> ( B ). ,or
B2-> ( B ). ,and

I380:
B2-> E .R E ,then
B2-> E .R E ,or
B2-> E .R E ,and
E-> E .+ E1 ,==
E-> E .+ E1 ,<=
E-> E .+ E1 ,!=
E-> E .+ E1 ,<
E-> E .+ E1 ,>
E-> E .+ E1 ,>=
E-> E .+ E1 ,+
R-> .< ,num
R-> .< ,(
R-> .< ,id
R-> .< ,-
R-> .<= ,num
R-> .<= ,(
R-> .<= ,id
R-> .<= ,-
R-> .== ,num
R-> .== ,(
R-> .== ,id
R-> .== ,-
R-> .!= ,num
R-> .!= ,(
R-> .!= ,id
R-> .!= ,-
R-> .> ,num
R-> .> ,(
R-> .> ,id
R-> .> ,-
R-> .>= ,num
R-> .>= ,(
R-> .>= ,id
R-> .>= ,-

I381:
B2-> E R .E ,then
B2-> E R .E ,or
B2-> E R .E ,and
E-> .E + E1 ,then
E-> .E1 ,then
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,then
E1-> .E2 ,then
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I382:
B2-> E R E. ,then
B2-> E R E. ,or
B2-> E R E. ,and
E-> E .+ E1 ,then
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+

I383:
E-> E + .E1 ,then
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E1-> .E1 * E2 ,then
E1-> .E2 ,then
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I384:
E-> E + E1. ,then
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E1-> E1 .* E2 ,then
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I385:
E1-> E1 * .E2 ,then
E1-> E1 * .E2 ,or
E1-> E1 * .E2 ,and
E1-> E1 * .E2 ,+
E1-> E1 * .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I386:
E1-> E1 * E2. ,then
E1-> E1 * E2. ,or
E1-> E1 * E2. ,and
E1-> E1 * E2. ,+
E1-> E1 * E2. ,*

I387:
E2-> ( .E ) ,then
E2-> ( .E ) ,or
E2-> ( .E ) ,and
E2-> ( .E ) ,+
E2-> ( .E ) ,*
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I388:
E2-> ( E .) ,then
E2-> ( E .) ,or
E2-> ( E .) ,and
E2-> ( E .) ,+
E2-> ( E .) ,*
E-> E .+ E1 ,)
E-> E .+ E1 ,+

I389:
E2-> ( E ). ,then
E2-> ( E ). ,or
E2-> ( E ). ,and
E2-> ( E ). ,+
E2-> ( E ). ,*

I390:
E2-> - .E ,then
E2-> - .E ,or
E2-> - .E ,and
E2-> - .E ,+
E2-> - .E ,*
E-> .E + E1 ,then
E-> .E1 ,then
E-> .E + E1 ,or
E-> .E1 ,or
E-> .E + E1 ,and
E-> .E1 ,and
E-> .E + E1 ,+
E-> .E1 ,+
E-> .E + E1 ,*
E-> .E1 ,*
E1-> .E1 * E2 ,then
E1-> .E2 ,then
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I391:
E2-> - E. ,then
E2-> - E. ,or
E2-> - E. ,and
E2-> - E. ,+
E2-> - E. ,*
E-> E .+ E1 ,then
E-> E .+ E1 ,or
E-> E .+ E1 ,and
E-> E .+ E1 ,+
E-> E .+ E1 ,*

I392:
E-> E + .E1 ,then
E-> E + .E1 ,or
E-> E + .E1 ,and
E-> E + .E1 ,+
E-> E + .E1 ,*
E1-> .E1 * E2 ,then
E1-> .E2 ,then
E1-> .E1 * E2 ,or
E1-> .E2 ,or
E1-> .E1 * E2 ,and
E1-> .E2 ,and
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,then
E2-> .- E ,then
E2-> .id ,then
E2-> .num ,then
E2-> .L ,then
E2-> .( E ) ,or
E2-> .- E ,or
E2-> .id ,or
E2-> .num ,or
E2-> .L ,or
E2-> .( E ) ,and
E2-> .- E ,and
E2-> .id ,and
E2-> .num ,and
E2-> .L ,and
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I393:
E-> E + E1. ,then
E-> E + E1. ,or
E-> E + E1. ,and
E-> E + E1. ,+
E-> E + E1. ,*
E1-> E1 .* E2 ,then
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I394:
E1-> E2. ,then
E1-> E2. ,or
E1-> E2. ,and
E1-> E2. ,+
E1-> E2. ,*

I395:
E2-> id. ,then
E2-> id. ,or
E2-> id. ,and
E2-> id. ,+
E2-> id. ,*
L-> id .[ E ] ,then
L-> id .[ E ] ,or
L-> id .[ E ] ,and
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I396:
L-> id [ .E ] ,then
L-> id [ .E ] ,or
L-> id [ .E ] ,and
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I397:
L-> id [ E .] ,then
L-> id [ E .] ,or
L-> id [ E .] ,and
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I398:
L-> id [ E ]. ,then
L-> id [ E ]. ,or
L-> id [ E ]. ,and
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I399:
E2-> num. ,then
E2-> num. ,or
E2-> num. ,and
E2-> num. ,+
E2-> num. ,*

I400:
E2-> L. ,then
E2-> L. ,or
E2-> L. ,and
E2-> L. ,+
E2-> L. ,*
L-> L .[ E ] ,then
L-> L .[ E ] ,or
L-> L .[ E ] ,and
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I401:
L-> L [ .E ] ,then
L-> L [ .E ] ,or
L-> L [ .E ] ,and
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E1 ,]
E-> .E1 ,]
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,]
E1-> .E2 ,]
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,]
E2-> .- E ,]
E2-> .id ,]
E2-> .num ,]
E2-> .L ,]
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I402:
L-> L [ E .] ,then
L-> L [ E .] ,or
L-> L [ E .] ,and
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E1 ,]
E-> E .+ E1 ,+

I403:
L-> L [ E ]. ,then
L-> L [ E ]. ,or
L-> L [ E ]. ,and
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I404:
E-> E1. ,then
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E-> E1. ,*
E1-> E1 .* E2 ,then
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I405:
E-> E1. ,then
E-> E1. ,or
E-> E1. ,and
E-> E1. ,+
E1-> E1 .* E2 ,then
E1-> E1 .* E2 ,or
E1-> E1 .* E2 ,and
E1-> E1 .* E2 ,+
E1-> E1 .* E2 ,*

I406:
B2-> true. ,then
B2-> true. ,or
B2-> true. ,and

I407:
B2-> false. ,then
B2-> false. ,or
B2-> false. ,and

I408:
B-> B1. ,then
B-> B1. ,or
B-> B1. ,and
B1-> B1 .and B2 ,then
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I409:
B-> B1. ,then
B-> B1. ,or
B1-> B1 .and B2 ,then
B1-> B1 .and B2 ,or
B1-> B1 .and B2 ,and

I410:
S1-> begin .S3 end ,else
S0-> begin .S3 end ,end
S0-> begin .S3 end ,;
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I411:
S1-> begin S3 .end ,else
S0-> begin S3 .end ,end
S0-> begin S3 .end ,;
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I412:
S1-> begin S3 end. ,else
S0-> begin S3 end. ,end
S0-> begin S3 end. ,;
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I413:
S1-> begin .S3 end ,#
S2-> begin .S3 end ,#
S1-> begin .S3 end ,proc
S2-> begin .S3 end ,proc
S1-> begin .S3 end ,record
S2-> begin .S3 end ,record
S1-> begin .S3 end ,integer
S2-> begin .S3 end ,integer
S1-> begin .S3 end ,real
S2-> begin .S3 end ,real
S1-> begin .S3 end ,call
S2-> begin .S3 end ,call
S1-> begin .S3 end ,id
S2-> begin .S3 end ,id
S1-> begin .S3 end ,while
S2-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S2-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I414:
S1-> begin S3 .end ,#
S2-> begin S3 .end ,#
S1-> begin S3 .end ,proc
S2-> begin S3 .end ,proc
S1-> begin S3 .end ,record
S2-> begin S3 .end ,record
S1-> begin S3 .end ,integer
S2-> begin S3 .end ,integer
S1-> begin S3 .end ,real
S2-> begin S3 .end ,real
S1-> begin S3 .end ,call
S2-> begin S3 .end ,call
S1-> begin S3 .end ,id
S2-> begin S3 .end ,id
S1-> begin S3 .end ,while
S2-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S2-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I415:
S1-> begin S3 end. ,#
S2-> begin S3 end. ,#
S1-> begin S3 end. ,proc
S2-> begin S3 end. ,proc
S1-> begin S3 end. ,record
S2-> begin S3 end. ,record
S1-> begin S3 end. ,integer
S2-> begin S3 end. ,integer
S1-> begin S3 end. ,real
S2-> begin S3 end. ,real
S1-> begin S3 end. ,call
S2-> begin S3 end. ,call
S1-> begin S3 end. ,id
S2-> begin S3 end. ,id
S1-> begin S3 end. ,while
S2-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S2-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,if

I416:
S2-> if B then S0. ,#
S2-> if B then S0. ,proc
S2-> if B then S0. ,record
S2-> if B then S0. ,integer
S2-> if B then S0. ,real
S2-> if B then S0. ,call
S2-> if B then S0. ,id
S2-> if B then S0. ,while
S2-> if B then S0. ,begin
S2-> if B then S0. ,if

I417:
S1-> begin .S3 end ,else
S0-> begin .S3 end ,#
S0-> begin .S3 end ,proc
S0-> begin .S3 end ,record
S0-> begin .S3 end ,integer
S0-> begin .S3 end ,real
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I418:
S1-> begin S3 .end ,else
S0-> begin S3 .end ,#
S0-> begin S3 .end ,proc
S0-> begin S3 .end ,record
S0-> begin S3 .end ,integer
S0-> begin S3 .end ,real
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I419:
S1-> begin S3 end. ,else
S0-> begin S3 end. ,#
S0-> begin S3 end. ,proc
S0-> begin S3 end. ,record
S0-> begin S3 end. ,integer
S0-> begin S3 end. ,real
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I420:
D-> D D. ,call
D-> D D. ,id
D-> D D. ,while
D-> D D. ,begin
D-> D D. ,if
D-> D D. ,proc
D-> D D. ,record
D-> D D. ,integer
D-> D D. ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,begin
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,call
D-> .proc id ; D S ,call
D-> .T id ; ,call
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,while
D-> .proc id ; D S ,while
D-> .T id ; ,while
D-> .D D ,begin
D-> .proc id ; D S ,begin
D-> .T id ; ,begin
D-> .D D ,if
D-> .proc id ; D S ,if
D-> .T id ; ,if
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I421:
D-> proc .id ; D S ,call
D-> proc .id ; D S ,id
D-> proc .id ; D S ,while
D-> proc .id ; D S ,begin
D-> proc .id ; D S ,if
D-> proc .id ; D S ,proc
D-> proc .id ; D S ,record
D-> proc .id ; D S ,integer
D-> proc .id ; D S ,real

I422:
D-> proc id .; D S ,call
D-> proc id .; D S ,id
D-> proc id .; D S ,while
D-> proc id .; D S ,begin
D-> proc id .; D S ,if
D-> proc id .; D S ,proc
D-> proc id .; D S ,record
D-> proc id .; D S ,integer
D-> proc id .; D S ,real

I423:
D-> proc id ; .D S ,call
D-> proc id ; .D S ,id
D-> proc id ; .D S ,while
D-> proc id ; .D S ,begin
D-> proc id ; .D S ,if
D-> proc id ; .D S ,proc
D-> proc id ; .D S ,record
D-> proc id ; .D S ,integer
D-> proc id ; .D S ,real
D-> .D D ,call
D-> .D D ,id
D-> .D D ,while
D-> .D D ,begin
D-> .D D ,if
D-> .proc id ; D S ,call
D-> .proc id ; D S ,id
D-> .proc id ; D S ,while
D-> .proc id ; D S ,begin
D-> .proc id ; D S ,if
D-> .T id ; ,call
D-> .T id ; ,id
D-> .T id ; ,while
D-> .T id ; ,begin
D-> .T id ; ,if
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I424:
D-> proc id ; D .S ,call
D-> proc id ; D .S ,id
D-> proc id ; D .S ,while
D-> proc id ; D .S ,begin
D-> proc id ; D .S ,if
D-> proc id ; D .S ,proc
D-> proc id ; D .S ,record
D-> proc id ; D .S ,integer
D-> proc id ; D .S ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,begin
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .S1 ,proc
S-> .S2 ,proc
S-> .call id ( EL ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .S1 ,record
S-> .S2 ,record
S-> .call id ( EL ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .S1 ,integer
S-> .S2 ,integer
S-> .call id ( EL ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .S1 ,real
S-> .S2 ,real
S-> .call id ( EL ) ,real
D-> .D D ,call
D-> .proc id ; D S ,call
D-> .T id ; ,call
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,while
D-> .proc id ; D S ,while
D-> .T id ; ,while
D-> .D D ,begin
D-> .proc id ; D S ,begin
D-> .T id ; ,begin
D-> .D D ,if
D-> .proc id ; D S ,if
D-> .T id ; ,if
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
T-> .X C ,id
T-> .record D ,id
L-> .id [ E ] ,[
L-> .L [ E ] ,[
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I425:
D-> proc id ; D S. ,call
D-> proc id ; D S. ,id
D-> proc id ; D S. ,while
D-> proc id ; D S. ,begin
D-> proc id ; D S. ,if
D-> proc id ; D S. ,proc
D-> proc id ; D S. ,record
D-> proc id ; D S. ,integer
D-> proc id ; D S. ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .S1 ,proc
S-> .S2 ,proc
S-> .call id ( EL ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .S1 ,record
S-> .S2 ,record
S-> .call id ( EL ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .S1 ,integer
S-> .S2 ,integer
S-> .call id ( EL ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .S1 ,real
S-> .S2 ,real
S-> .call id ( EL ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I426:
S-> S S. ,call
S-> S S. ,id
S-> S S. ,while
S-> S S. ,begin
S-> S S. ,if
S-> S S. ,proc
S-> S S. ,record
S-> S S. ,integer
S-> S S. ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .S1 ,proc
S-> .S2 ,proc
S-> .call id ( EL ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .S1 ,record
S-> .S2 ,record
S-> .call id ( EL ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .S1 ,integer
S-> .S2 ,integer
S-> .call id ( EL ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .S1 ,real
S-> .S2 ,real
S-> .call id ( EL ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I427:
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,begin
S-> id .= E ; ,if
S-> id .= E ; ,proc
S-> id .= E ; ,record
S-> id .= E ; ,integer
S-> id .= E ; ,real
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I428:
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,begin
S-> id = .E ; ,if
S-> id = .E ; ,proc
S-> id = .E ; ,record
S-> id = .E ; ,integer
S-> id = .E ; ,real
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I429:
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,begin
S-> id = E .; ,if
S-> id = E .; ,proc
S-> id = E .; ,record
S-> id = E .; ,integer
S-> id = E .; ,real
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I430:
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,begin
S-> id = E ;. ,if
S-> id = E ;. ,proc
S-> id = E ;. ,record
S-> id = E ;. ,integer
S-> id = E ;. ,real

I431:
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,begin
S-> L .= E ; ,if
S-> L .= E ; ,proc
S-> L .= E ; ,record
S-> L .= E ; ,integer
S-> L .= E ; ,real
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I432:
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,begin
S-> L = .E ; ,if
S-> L = .E ; ,proc
S-> L = .E ; ,record
S-> L = .E ; ,integer
S-> L = .E ; ,real
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I433:
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,begin
S-> L = E .; ,if
S-> L = E .; ,proc
S-> L = E .; ,record
S-> L = E .; ,integer
S-> L = E .; ,real
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I434:
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,begin
S-> L = E ;. ,if
S-> L = E ;. ,proc
S-> L = E ;. ,record
S-> L = E ;. ,integer
S-> L = E ;. ,real

I435:
S-> S1. ,call
S-> S1. ,id
S-> S1. ,while
S-> S1. ,begin
S-> S1. ,if
S-> S1. ,proc
S-> S1. ,record
S-> S1. ,integer
S-> S1. ,real

I436:
S-> S2. ,call
S-> S2. ,id
S-> S2. ,while
S-> S2. ,begin
S-> S2. ,if
S-> S2. ,proc
S-> S2. ,record
S-> S2. ,integer
S-> S2. ,real

I437:
S-> call .id ( EL ) ,call
S-> call .id ( EL ) ,id
S-> call .id ( EL ) ,while
S-> call .id ( EL ) ,begin
S-> call .id ( EL ) ,if
S-> call .id ( EL ) ,proc
S-> call .id ( EL ) ,record
S-> call .id ( EL ) ,integer
S-> call .id ( EL ) ,real

I438:
S-> call id .( EL ) ,call
S-> call id .( EL ) ,id
S-> call id .( EL ) ,while
S-> call id .( EL ) ,begin
S-> call id .( EL ) ,if
S-> call id .( EL ) ,proc
S-> call id .( EL ) ,record
S-> call id .( EL ) ,integer
S-> call id .( EL ) ,real

I439:
S-> call id ( .EL ) ,call
S-> call id ( .EL ) ,id
S-> call id ( .EL ) ,while
S-> call id ( .EL ) ,begin
S-> call id ( .EL ) ,if
S-> call id ( .EL ) ,proc
S-> call id ( .EL ) ,record
S-> call id ( .EL ) ,integer
S-> call id ( .EL ) ,real
EL-> .EL , E ,)
EL-> .E ,)
EL-> .EL , E ,,
EL-> .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I440:
S-> call id ( EL .) ,call
S-> call id ( EL .) ,id
S-> call id ( EL .) ,while
S-> call id ( EL .) ,begin
S-> call id ( EL .) ,if
S-> call id ( EL .) ,proc
S-> call id ( EL .) ,record
S-> call id ( EL .) ,integer
S-> call id ( EL .) ,real
EL-> EL ., E ,)
EL-> EL ., E ,,

I441:
S-> call id ( EL ). ,call
S-> call id ( EL ). ,id
S-> call id ( EL ). ,while
S-> call id ( EL ). ,begin
S-> call id ( EL ). ,if
S-> call id ( EL ). ,proc
S-> call id ( EL ). ,record
S-> call id ( EL ). ,integer
S-> call id ( EL ). ,real

I442:
S1-> if .B then S1 else S1 ,call
S2-> if .B then S1 else S2 ,call
S2-> if .B then S0 ,call
S1-> if .B then S1 else S1 ,id
S2-> if .B then S1 else S2 ,id
S2-> if .B then S0 ,id
S1-> if .B then S1 else S1 ,while
S2-> if .B then S1 else S2 ,while
S2-> if .B then S0 ,while
S1-> if .B then S1 else S1 ,begin
S2-> if .B then S1 else S2 ,begin
S2-> if .B then S0 ,begin
S1-> if .B then S1 else S1 ,if
S2-> if .B then S1 else S2 ,if
S2-> if .B then S0 ,if
S1-> if .B then S1 else S1 ,proc
S2-> if .B then S1 else S2 ,proc
S2-> if .B then S0 ,proc
S1-> if .B then S1 else S1 ,record
S2-> if .B then S1 else S2 ,record
S2-> if .B then S0 ,record
S1-> if .B then S1 else S1 ,integer
S2-> if .B then S1 else S2 ,integer
S2-> if .B then S0 ,integer
S1-> if .B then S1 else S1 ,real
S2-> if .B then S1 else S2 ,real
S2-> if .B then S0 ,real
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I443:
S1-> if B .then S1 else S1 ,call
S2-> if B .then S1 else S2 ,call
S2-> if B .then S0 ,call
S1-> if B .then S1 else S1 ,id
S2-> if B .then S1 else S2 ,id
S2-> if B .then S0 ,id
S1-> if B .then S1 else S1 ,while
S2-> if B .then S1 else S2 ,while
S2-> if B .then S0 ,while
S1-> if B .then S1 else S1 ,begin
S2-> if B .then S1 else S2 ,begin
S2-> if B .then S0 ,begin
S1-> if B .then S1 else S1 ,if
S2-> if B .then S1 else S2 ,if
S2-> if B .then S0 ,if
S1-> if B .then S1 else S1 ,proc
S2-> if B .then S1 else S2 ,proc
S2-> if B .then S0 ,proc
S1-> if B .then S1 else S1 ,record
S2-> if B .then S1 else S2 ,record
S2-> if B .then S0 ,record
S1-> if B .then S1 else S1 ,integer
S2-> if B .then S1 else S2 ,integer
S2-> if B .then S0 ,integer
S1-> if B .then S1 else S1 ,real
S2-> if B .then S1 else S2 ,real
S2-> if B .then S0 ,real
B-> B .or B1 ,then
B-> B .or B1 ,or

I444:
S1-> if B then .S1 else S1 ,call
S2-> if B then .S1 else S2 ,call
S2-> if B then .S0 ,call
S1-> if B then .S1 else S1 ,id
S2-> if B then .S1 else S2 ,id
S2-> if B then .S0 ,id
S1-> if B then .S1 else S1 ,while
S2-> if B then .S1 else S2 ,while
S2-> if B then .S0 ,while
S1-> if B then .S1 else S1 ,begin
S2-> if B then .S1 else S2 ,begin
S2-> if B then .S0 ,begin
S1-> if B then .S1 else S1 ,if
S2-> if B then .S1 else S2 ,if
S2-> if B then .S0 ,if
S1-> if B then .S1 else S1 ,proc
S2-> if B then .S1 else S2 ,proc
S2-> if B then .S0 ,proc
S1-> if B then .S1 else S1 ,record
S2-> if B then .S1 else S2 ,record
S2-> if B then .S0 ,record
S1-> if B then .S1 else S1 ,integer
S2-> if B then .S1 else S2 ,integer
S2-> if B then .S0 ,integer
S1-> if B then .S1 else S1 ,real
S2-> if B then .S1 else S2 ,real
S2-> if B then .S0 ,real
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if
S0-> .begin S3 end ,proc
S0-> .begin S3 end ,record
S0-> .begin S3 end ,integer
S0-> .begin S3 end ,real

I445:
S1-> if B then S1 .else S1 ,call
S2-> if B then S1 .else S2 ,call
S1-> if B then S1 .else S1 ,id
S2-> if B then S1 .else S2 ,id
S1-> if B then S1 .else S1 ,while
S2-> if B then S1 .else S2 ,while
S1-> if B then S1 .else S1 ,begin
S2-> if B then S1 .else S2 ,begin
S1-> if B then S1 .else S1 ,if
S2-> if B then S1 .else S2 ,if
S1-> if B then S1 .else S1 ,proc
S2-> if B then S1 .else S2 ,proc
S1-> if B then S1 .else S1 ,record
S2-> if B then S1 .else S2 ,record
S1-> if B then S1 .else S1 ,integer
S2-> if B then S1 .else S2 ,integer
S1-> if B then S1 .else S1 ,real
S2-> if B then S1 .else S2 ,real

I446:
S1-> if B then S1 else .S1 ,call
S2-> if B then S1 else .S2 ,call
S1-> if B then S1 else .S1 ,id
S2-> if B then S1 else .S2 ,id
S1-> if B then S1 else .S1 ,while
S2-> if B then S1 else .S2 ,while
S1-> if B then S1 else .S1 ,begin
S2-> if B then S1 else .S2 ,begin
S1-> if B then S1 else .S1 ,if
S2-> if B then S1 else .S2 ,if
S1-> if B then S1 else .S1 ,proc
S2-> if B then S1 else .S2 ,proc
S1-> if B then S1 else .S1 ,record
S2-> if B then S1 else .S2 ,record
S1-> if B then S1 else .S1 ,integer
S2-> if B then S1 else .S2 ,integer
S1-> if B then S1 else .S1 ,real
S2-> if B then S1 else .S2 ,real
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real

I447:
S1-> if B then S1 else S1. ,call
S1-> if B then S1 else S1. ,id
S1-> if B then S1 else S1. ,while
S1-> if B then S1 else S1. ,begin
S1-> if B then S1 else S1. ,if
S1-> if B then S1 else S1. ,proc
S1-> if B then S1 else S1. ,record
S1-> if B then S1 else S1. ,integer
S1-> if B then S1 else S1. ,real

I448:
S2-> if B then S1 else S2. ,call
S2-> if B then S1 else S2. ,id
S2-> if B then S1 else S2. ,while
S2-> if B then S1 else S2. ,begin
S2-> if B then S1 else S2. ,if
S2-> if B then S1 else S2. ,proc
S2-> if B then S1 else S2. ,record
S2-> if B then S1 else S2. ,integer
S2-> if B then S1 else S2. ,real

I449:
S1-> while .B do S0 ,call
S1-> while .B do S0 ,id
S1-> while .B do S0 ,while
S1-> while .B do S0 ,begin
S1-> while .B do S0 ,if
S1-> while .B do S0 ,proc
S1-> while .B do S0 ,record
S1-> while .B do S0 ,integer
S1-> while .B do S0 ,real
B-> .B or B1 ,do
B-> .B1 ,do
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,do
B1-> .B2 ,do
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I450:
S1-> while B .do S0 ,call
S1-> while B .do S0 ,id
S1-> while B .do S0 ,while
S1-> while B .do S0 ,begin
S1-> while B .do S0 ,if
S1-> while B .do S0 ,proc
S1-> while B .do S0 ,record
S1-> while B .do S0 ,integer
S1-> while B .do S0 ,real
B-> B .or B1 ,do
B-> B .or B1 ,or

I451:
S1-> while B do .S0 ,call
S1-> while B do .S0 ,id
S1-> while B do .S0 ,while
S1-> while B do .S0 ,begin
S1-> while B do .S0 ,if
S1-> while B do .S0 ,proc
S1-> while B do .S0 ,record
S1-> while B do .S0 ,integer
S1-> while B do .S0 ,real
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if
S0-> .begin S3 end ,proc
S0-> .begin S3 end ,record
S0-> .begin S3 end ,integer
S0-> .begin S3 end ,real

I452:
S1-> while B do S0. ,call
S1-> while B do S0. ,id
S1-> while B do S0. ,while
S1-> while B do S0. ,begin
S1-> while B do S0. ,if
S1-> while B do S0. ,proc
S1-> while B do S0. ,record
S1-> while B do S0. ,integer
S1-> while B do S0. ,real

I453:
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S0-> begin .S3 end ,proc
S0-> begin .S3 end ,record
S0-> begin .S3 end ,integer
S0-> begin .S3 end ,real
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I454:
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S0-> begin S3 .end ,proc
S0-> begin S3 .end ,record
S0-> begin S3 .end ,integer
S0-> begin S3 .end ,real
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I455:
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if
S0-> begin S3 end. ,proc
S0-> begin S3 end. ,record
S0-> begin S3 end. ,integer
S0-> begin S3 end. ,real

I456:
S1-> begin .S3 end ,call
S2-> begin .S3 end ,call
S1-> begin .S3 end ,id
S2-> begin .S3 end ,id
S1-> begin .S3 end ,while
S2-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S2-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,if
S1-> begin .S3 end ,proc
S2-> begin .S3 end ,proc
S1-> begin .S3 end ,record
S2-> begin .S3 end ,record
S1-> begin .S3 end ,integer
S2-> begin .S3 end ,integer
S1-> begin .S3 end ,real
S2-> begin .S3 end ,real
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I457:
S1-> begin S3 .end ,call
S2-> begin S3 .end ,call
S1-> begin S3 .end ,id
S2-> begin S3 .end ,id
S1-> begin S3 .end ,while
S2-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S2-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,if
S1-> begin S3 .end ,proc
S2-> begin S3 .end ,proc
S1-> begin S3 .end ,record
S2-> begin S3 .end ,record
S1-> begin S3 .end ,integer
S2-> begin S3 .end ,integer
S1-> begin S3 .end ,real
S2-> begin S3 .end ,real
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I458:
S1-> begin S3 end. ,call
S2-> begin S3 end. ,call
S1-> begin S3 end. ,id
S2-> begin S3 end. ,id
S1-> begin S3 end. ,while
S2-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S2-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,if
S1-> begin S3 end. ,proc
S2-> begin S3 end. ,proc
S1-> begin S3 end. ,record
S2-> begin S3 end. ,record
S1-> begin S3 end. ,integer
S2-> begin S3 end. ,integer
S1-> begin S3 end. ,real
S2-> begin S3 end. ,real

I459:
S2-> if B then S0. ,call
S2-> if B then S0. ,id
S2-> if B then S0. ,while
S2-> if B then S0. ,begin
S2-> if B then S0. ,if
S2-> if B then S0. ,proc
S2-> if B then S0. ,record
S2-> if B then S0. ,integer
S2-> if B then S0. ,real

I460:
S1-> begin .S3 end ,else
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S0-> begin .S3 end ,proc
S0-> begin .S3 end ,record
S0-> begin .S3 end ,integer
S0-> begin .S3 end ,real
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I461:
S1-> begin S3 .end ,else
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S0-> begin S3 .end ,proc
S0-> begin S3 .end ,record
S0-> begin S3 .end ,integer
S0-> begin S3 .end ,real
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I462:
S1-> begin S3 end. ,else
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if
S0-> begin S3 end. ,proc
S0-> begin S3 end. ,record
S0-> begin S3 end. ,integer
S0-> begin S3 end. ,real

I463:
D-> T .id ; ,call
D-> T .id ; ,id
D-> T .id ; ,while
D-> T .id ; ,begin
D-> T .id ; ,if
D-> T .id ; ,proc
D-> T .id ; ,record
D-> T .id ; ,integer
D-> T .id ; ,real

I464:
D-> T id .; ,call
D-> T id .; ,id
D-> T id .; ,while
D-> T id .; ,begin
D-> T id .; ,if
D-> T id .; ,proc
D-> T id .; ,record
D-> T id .; ,integer
D-> T id .; ,real

I465:
D-> T id ;. ,call
D-> T id ;. ,id
D-> T id ;. ,while
D-> T id ;. ,begin
D-> T id ;. ,if
D-> T id ;. ,proc
D-> T id ;. ,record
D-> T id ;. ,integer
D-> T id ;. ,real

I466:
T-> X .C ,id
C-> .[ num ] C ,id
C-> . ,id

I467:
T-> X C. ,id

I468:
C-> [ .num ] C ,id

I469:
C-> [ num .] C ,id

I470:
C-> [ num ] .C ,id
C-> .[ num ] C ,id
C-> . ,id

I471:
C-> [ num ] C. ,id

I472:
T-> record .D ,id
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I473:
T-> record D. ,id
D-> D .D ,id
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I474:
D-> D D. ,id
D-> D D. ,proc
D-> D D. ,record
D-> D D. ,integer
D-> D D. ,real
D-> D .D ,id
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I475:
D-> proc .id ; D S ,id
D-> proc .id ; D S ,proc
D-> proc .id ; D S ,record
D-> proc .id ; D S ,integer
D-> proc .id ; D S ,real

I476:
D-> proc id .; D S ,id
D-> proc id .; D S ,proc
D-> proc id .; D S ,record
D-> proc id .; D S ,integer
D-> proc id .; D S ,real

I477:
D-> proc id ; .D S ,id
D-> proc id ; .D S ,proc
D-> proc id ; .D S ,record
D-> proc id ; .D S ,integer
D-> proc id ; .D S ,real
D-> .D D ,call
D-> .D D ,id
D-> .D D ,while
D-> .D D ,begin
D-> .D D ,if
D-> .proc id ; D S ,call
D-> .proc id ; D S ,id
D-> .proc id ; D S ,while
D-> .proc id ; D S ,begin
D-> .proc id ; D S ,if
D-> .T id ; ,call
D-> .T id ; ,id
D-> .T id ; ,while
D-> .T id ; ,begin
D-> .T id ; ,if
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I478:
D-> proc id ; D .S ,id
D-> proc id ; D .S ,proc
D-> proc id ; D .S ,record
D-> proc id ; D .S ,integer
D-> proc id ; D .S ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,begin
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .S1 ,proc
S-> .S2 ,proc
S-> .call id ( EL ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .S1 ,record
S-> .S2 ,record
S-> .call id ( EL ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .S1 ,integer
S-> .S2 ,integer
S-> .call id ( EL ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .S1 ,real
S-> .S2 ,real
S-> .call id ( EL ) ,real
D-> .D D ,call
D-> .proc id ; D S ,call
D-> .T id ; ,call
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,while
D-> .proc id ; D S ,while
D-> .T id ; ,while
D-> .D D ,begin
D-> .proc id ; D S ,begin
D-> .T id ; ,begin
D-> .D D ,if
D-> .proc id ; D S ,if
D-> .T id ; ,if
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
S-> .S S ,call
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
T-> .X C ,id
T-> .record D ,id
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I479:
D-> proc id ; D S. ,id
D-> proc id ; D S. ,proc
D-> proc id ; D S. ,record
D-> proc id ; D S. ,integer
D-> proc id ; D S. ,real
S-> S .S ,id
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .S1 ,proc
S-> .S2 ,proc
S-> .call id ( EL ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .S1 ,record
S-> .S2 ,record
S-> .call id ( EL ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .S1 ,integer
S-> .S2 ,integer
S-> .call id ( EL ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .S1 ,real
S-> .S2 ,real
S-> .call id ( EL ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I480:
S-> S S. ,id
S-> S S. ,proc
S-> S S. ,record
S-> S S. ,integer
S-> S S. ,real
S-> S S. ,call
S-> S S. ,while
S-> S S. ,begin
S-> S S. ,if
S-> S .S ,id
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .S1 ,proc
S-> .S2 ,proc
S-> .call id ( EL ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .S1 ,record
S-> .S2 ,record
S-> .call id ( EL ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .S1 ,integer
S-> .S2 ,integer
S-> .call id ( EL ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .S1 ,real
S-> .S2 ,real
S-> .call id ( EL ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I481:
S-> id .= E ; ,id
S-> id .= E ; ,proc
S-> id .= E ; ,record
S-> id .= E ; ,integer
S-> id .= E ; ,real
S-> id .= E ; ,call
S-> id .= E ; ,while
S-> id .= E ; ,begin
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I482:
S-> id = .E ; ,id
S-> id = .E ; ,proc
S-> id = .E ; ,record
S-> id = .E ; ,integer
S-> id = .E ; ,real
S-> id = .E ; ,call
S-> id = .E ; ,while
S-> id = .E ; ,begin
S-> id = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I483:
S-> id = E .; ,id
S-> id = E .; ,proc
S-> id = E .; ,record
S-> id = E .; ,integer
S-> id = E .; ,real
S-> id = E .; ,call
S-> id = E .; ,while
S-> id = E .; ,begin
S-> id = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I484:
S-> id = E ;. ,id
S-> id = E ;. ,proc
S-> id = E ;. ,record
S-> id = E ;. ,integer
S-> id = E ;. ,real
S-> id = E ;. ,call
S-> id = E ;. ,while
S-> id = E ;. ,begin
S-> id = E ;. ,if

I485:
S-> L .= E ; ,id
S-> L .= E ; ,proc
S-> L .= E ; ,record
S-> L .= E ; ,integer
S-> L .= E ; ,real
S-> L .= E ; ,call
S-> L .= E ; ,while
S-> L .= E ; ,begin
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I486:
S-> L = .E ; ,id
S-> L = .E ; ,proc
S-> L = .E ; ,record
S-> L = .E ; ,integer
S-> L = .E ; ,real
S-> L = .E ; ,call
S-> L = .E ; ,while
S-> L = .E ; ,begin
S-> L = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I487:
S-> L = E .; ,id
S-> L = E .; ,proc
S-> L = E .; ,record
S-> L = E .; ,integer
S-> L = E .; ,real
S-> L = E .; ,call
S-> L = E .; ,while
S-> L = E .; ,begin
S-> L = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I488:
S-> L = E ;. ,id
S-> L = E ;. ,proc
S-> L = E ;. ,record
S-> L = E ;. ,integer
S-> L = E ;. ,real
S-> L = E ;. ,call
S-> L = E ;. ,while
S-> L = E ;. ,begin
S-> L = E ;. ,if

I489:
S-> S1. ,id
S-> S1. ,proc
S-> S1. ,record
S-> S1. ,integer
S-> S1. ,real
S-> S1. ,call
S-> S1. ,while
S-> S1. ,begin
S-> S1. ,if

I490:
S-> S2. ,id
S-> S2. ,proc
S-> S2. ,record
S-> S2. ,integer
S-> S2. ,real
S-> S2. ,call
S-> S2. ,while
S-> S2. ,begin
S-> S2. ,if

I491:
S-> call .id ( EL ) ,id
S-> call .id ( EL ) ,proc
S-> call .id ( EL ) ,record
S-> call .id ( EL ) ,integer
S-> call .id ( EL ) ,real
S-> call .id ( EL ) ,call
S-> call .id ( EL ) ,while
S-> call .id ( EL ) ,begin
S-> call .id ( EL ) ,if

I492:
S-> call id .( EL ) ,id
S-> call id .( EL ) ,proc
S-> call id .( EL ) ,record
S-> call id .( EL ) ,integer
S-> call id .( EL ) ,real
S-> call id .( EL ) ,call
S-> call id .( EL ) ,while
S-> call id .( EL ) ,begin
S-> call id .( EL ) ,if

I493:
S-> call id ( .EL ) ,id
S-> call id ( .EL ) ,proc
S-> call id ( .EL ) ,record
S-> call id ( .EL ) ,integer
S-> call id ( .EL ) ,real
S-> call id ( .EL ) ,call
S-> call id ( .EL ) ,while
S-> call id ( .EL ) ,begin
S-> call id ( .EL ) ,if
EL-> .EL , E ,)
EL-> .E ,)
EL-> .EL , E ,,
EL-> .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I494:
S-> call id ( EL .) ,id
S-> call id ( EL .) ,proc
S-> call id ( EL .) ,record
S-> call id ( EL .) ,integer
S-> call id ( EL .) ,real
S-> call id ( EL .) ,call
S-> call id ( EL .) ,while
S-> call id ( EL .) ,begin
S-> call id ( EL .) ,if
EL-> EL ., E ,)
EL-> EL ., E ,,

I495:
S-> call id ( EL ). ,id
S-> call id ( EL ). ,proc
S-> call id ( EL ). ,record
S-> call id ( EL ). ,integer
S-> call id ( EL ). ,real
S-> call id ( EL ). ,call
S-> call id ( EL ). ,while
S-> call id ( EL ). ,begin
S-> call id ( EL ). ,if

I496:
S1-> if .B then S1 else S1 ,id
S2-> if .B then S1 else S2 ,id
S2-> if .B then S0 ,id
S1-> if .B then S1 else S1 ,proc
S2-> if .B then S1 else S2 ,proc
S2-> if .B then S0 ,proc
S1-> if .B then S1 else S1 ,record
S2-> if .B then S1 else S2 ,record
S2-> if .B then S0 ,record
S1-> if .B then S1 else S1 ,integer
S2-> if .B then S1 else S2 ,integer
S2-> if .B then S0 ,integer
S1-> if .B then S1 else S1 ,real
S2-> if .B then S1 else S2 ,real
S2-> if .B then S0 ,real
S1-> if .B then S1 else S1 ,call
S2-> if .B then S1 else S2 ,call
S2-> if .B then S0 ,call
S1-> if .B then S1 else S1 ,while
S2-> if .B then S1 else S2 ,while
S2-> if .B then S0 ,while
S1-> if .B then S1 else S1 ,begin
S2-> if .B then S1 else S2 ,begin
S2-> if .B then S0 ,begin
S1-> if .B then S1 else S1 ,if
S2-> if .B then S1 else S2 ,if
S2-> if .B then S0 ,if
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I497:
S1-> if B .then S1 else S1 ,id
S2-> if B .then S1 else S2 ,id
S2-> if B .then S0 ,id
S1-> if B .then S1 else S1 ,proc
S2-> if B .then S1 else S2 ,proc
S2-> if B .then S0 ,proc
S1-> if B .then S1 else S1 ,record
S2-> if B .then S1 else S2 ,record
S2-> if B .then S0 ,record
S1-> if B .then S1 else S1 ,integer
S2-> if B .then S1 else S2 ,integer
S2-> if B .then S0 ,integer
S1-> if B .then S1 else S1 ,real
S2-> if B .then S1 else S2 ,real
S2-> if B .then S0 ,real
S1-> if B .then S1 else S1 ,call
S2-> if B .then S1 else S2 ,call
S2-> if B .then S0 ,call
S1-> if B .then S1 else S1 ,while
S2-> if B .then S1 else S2 ,while
S2-> if B .then S0 ,while
S1-> if B .then S1 else S1 ,begin
S2-> if B .then S1 else S2 ,begin
S2-> if B .then S0 ,begin
S1-> if B .then S1 else S1 ,if
S2-> if B .then S1 else S2 ,if
S2-> if B .then S0 ,if
B-> B .or B1 ,then
B-> B .or B1 ,or

I498:
S1-> if B then .S1 else S1 ,id
S2-> if B then .S1 else S2 ,id
S2-> if B then .S0 ,id
S1-> if B then .S1 else S1 ,proc
S2-> if B then .S1 else S2 ,proc
S2-> if B then .S0 ,proc
S1-> if B then .S1 else S1 ,record
S2-> if B then .S1 else S2 ,record
S2-> if B then .S0 ,record
S1-> if B then .S1 else S1 ,integer
S2-> if B then .S1 else S2 ,integer
S2-> if B then .S0 ,integer
S1-> if B then .S1 else S1 ,real
S2-> if B then .S1 else S2 ,real
S2-> if B then .S0 ,real
S1-> if B then .S1 else S1 ,call
S2-> if B then .S1 else S2 ,call
S2-> if B then .S0 ,call
S1-> if B then .S1 else S1 ,while
S2-> if B then .S1 else S2 ,while
S2-> if B then .S0 ,while
S1-> if B then .S1 else S1 ,begin
S2-> if B then .S1 else S2 ,begin
S2-> if B then .S0 ,begin
S1-> if B then .S1 else S1 ,if
S2-> if B then .S1 else S2 ,if
S2-> if B then .S0 ,if
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,id
S0-> .begin S3 end ,proc
S0-> .begin S3 end ,record
S0-> .begin S3 end ,integer
S0-> .begin S3 end ,real
S0-> .begin S3 end ,call
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I499:
S1-> if B then S1 .else S1 ,id
S2-> if B then S1 .else S2 ,id
S1-> if B then S1 .else S1 ,proc
S2-> if B then S1 .else S2 ,proc
S1-> if B then S1 .else S1 ,record
S2-> if B then S1 .else S2 ,record
S1-> if B then S1 .else S1 ,integer
S2-> if B then S1 .else S2 ,integer
S1-> if B then S1 .else S1 ,real
S2-> if B then S1 .else S2 ,real
S1-> if B then S1 .else S1 ,call
S2-> if B then S1 .else S2 ,call
S1-> if B then S1 .else S1 ,while
S2-> if B then S1 .else S2 ,while
S1-> if B then S1 .else S1 ,begin
S2-> if B then S1 .else S2 ,begin
S1-> if B then S1 .else S1 ,if
S2-> if B then S1 .else S2 ,if

I500:
S1-> if B then S1 else .S1 ,id
S2-> if B then S1 else .S2 ,id
S1-> if B then S1 else .S1 ,proc
S2-> if B then S1 else .S2 ,proc
S1-> if B then S1 else .S1 ,record
S2-> if B then S1 else .S2 ,record
S1-> if B then S1 else .S1 ,integer
S2-> if B then S1 else .S2 ,integer
S1-> if B then S1 else .S1 ,real
S2-> if B then S1 else .S2 ,real
S1-> if B then S1 else .S1 ,call
S2-> if B then S1 else .S2 ,call
S1-> if B then S1 else .S1 ,while
S2-> if B then S1 else .S2 ,while
S1-> if B then S1 else .S1 ,begin
S2-> if B then S1 else .S2 ,begin
S1-> if B then S1 else .S1 ,if
S2-> if B then S1 else .S2 ,if
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if

I501:
S1-> if B then S1 else S1. ,id
S1-> if B then S1 else S1. ,proc
S1-> if B then S1 else S1. ,record
S1-> if B then S1 else S1. ,integer
S1-> if B then S1 else S1. ,real
S1-> if B then S1 else S1. ,call
S1-> if B then S1 else S1. ,while
S1-> if B then S1 else S1. ,begin
S1-> if B then S1 else S1. ,if

I502:
S2-> if B then S1 else S2. ,id
S2-> if B then S1 else S2. ,proc
S2-> if B then S1 else S2. ,record
S2-> if B then S1 else S2. ,integer
S2-> if B then S1 else S2. ,real
S2-> if B then S1 else S2. ,call
S2-> if B then S1 else S2. ,while
S2-> if B then S1 else S2. ,begin
S2-> if B then S1 else S2. ,if

I503:
S1-> while .B do S0 ,id
S1-> while .B do S0 ,proc
S1-> while .B do S0 ,record
S1-> while .B do S0 ,integer
S1-> while .B do S0 ,real
S1-> while .B do S0 ,call
S1-> while .B do S0 ,while
S1-> while .B do S0 ,begin
S1-> while .B do S0 ,if
B-> .B or B1 ,do
B-> .B1 ,do
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,do
B1-> .B2 ,do
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I504:
S1-> while B .do S0 ,id
S1-> while B .do S0 ,proc
S1-> while B .do S0 ,record
S1-> while B .do S0 ,integer
S1-> while B .do S0 ,real
S1-> while B .do S0 ,call
S1-> while B .do S0 ,while
S1-> while B .do S0 ,begin
S1-> while B .do S0 ,if
B-> B .or B1 ,do
B-> B .or B1 ,or

I505:
S1-> while B do .S0 ,id
S1-> while B do .S0 ,proc
S1-> while B do .S0 ,record
S1-> while B do .S0 ,integer
S1-> while B do .S0 ,real
S1-> while B do .S0 ,call
S1-> while B do .S0 ,while
S1-> while B do .S0 ,begin
S1-> while B do .S0 ,if
S0-> .begin S3 end ,id
S0-> .begin S3 end ,proc
S0-> .begin S3 end ,record
S0-> .begin S3 end ,integer
S0-> .begin S3 end ,real
S0-> .begin S3 end ,call
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I506:
S1-> while B do S0. ,id
S1-> while B do S0. ,proc
S1-> while B do S0. ,record
S1-> while B do S0. ,integer
S1-> while B do S0. ,real
S1-> while B do S0. ,call
S1-> while B do S0. ,while
S1-> while B do S0. ,begin
S1-> while B do S0. ,if

I507:
S0-> begin .S3 end ,id
S0-> begin .S3 end ,proc
S0-> begin .S3 end ,record
S0-> begin .S3 end ,integer
S0-> begin .S3 end ,real
S0-> begin .S3 end ,call
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I508:
S0-> begin S3 .end ,id
S0-> begin S3 .end ,proc
S0-> begin S3 .end ,record
S0-> begin S3 .end ,integer
S0-> begin S3 .end ,real
S0-> begin S3 .end ,call
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I509:
S0-> begin S3 end. ,id
S0-> begin S3 end. ,proc
S0-> begin S3 end. ,record
S0-> begin S3 end. ,integer
S0-> begin S3 end. ,real
S0-> begin S3 end. ,call
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I510:
S1-> begin .S3 end ,id
S2-> begin .S3 end ,id
S1-> begin .S3 end ,proc
S2-> begin .S3 end ,proc
S1-> begin .S3 end ,record
S2-> begin .S3 end ,record
S1-> begin .S3 end ,integer
S2-> begin .S3 end ,integer
S1-> begin .S3 end ,real
S2-> begin .S3 end ,real
S1-> begin .S3 end ,call
S2-> begin .S3 end ,call
S1-> begin .S3 end ,while
S2-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S2-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I511:
S1-> begin S3 .end ,id
S2-> begin S3 .end ,id
S1-> begin S3 .end ,proc
S2-> begin S3 .end ,proc
S1-> begin S3 .end ,record
S2-> begin S3 .end ,record
S1-> begin S3 .end ,integer
S2-> begin S3 .end ,integer
S1-> begin S3 .end ,real
S2-> begin S3 .end ,real
S1-> begin S3 .end ,call
S2-> begin S3 .end ,call
S1-> begin S3 .end ,while
S2-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S2-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I512:
S1-> begin S3 end. ,id
S2-> begin S3 end. ,id
S1-> begin S3 end. ,proc
S2-> begin S3 end. ,proc
S1-> begin S3 end. ,record
S2-> begin S3 end. ,record
S1-> begin S3 end. ,integer
S2-> begin S3 end. ,integer
S1-> begin S3 end. ,real
S2-> begin S3 end. ,real
S1-> begin S3 end. ,call
S2-> begin S3 end. ,call
S1-> begin S3 end. ,while
S2-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S2-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,if

I513:
S2-> if B then S0. ,id
S2-> if B then S0. ,proc
S2-> if B then S0. ,record
S2-> if B then S0. ,integer
S2-> if B then S0. ,real
S2-> if B then S0. ,call
S2-> if B then S0. ,while
S2-> if B then S0. ,begin
S2-> if B then S0. ,if

I514:
S1-> begin .S3 end ,else
S0-> begin .S3 end ,id
S0-> begin .S3 end ,proc
S0-> begin .S3 end ,record
S0-> begin .S3 end ,integer
S0-> begin .S3 end ,real
S0-> begin .S3 end ,call
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I515:
S1-> begin S3 .end ,else
S0-> begin S3 .end ,id
S0-> begin S3 .end ,proc
S0-> begin S3 .end ,record
S0-> begin S3 .end ,integer
S0-> begin S3 .end ,real
S0-> begin S3 .end ,call
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I516:
S1-> begin S3 end. ,else
S0-> begin S3 end. ,id
S0-> begin S3 end. ,proc
S0-> begin S3 end. ,record
S0-> begin S3 end. ,integer
S0-> begin S3 end. ,real
S0-> begin S3 end. ,call
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I517:
S1-> if .B then S1 else S1 ,id
S2-> if .B then S1 else S2 ,id
S2-> if .B then S0 ,id
S1-> if .B then S1 else S1 ,proc
S2-> if .B then S1 else S2 ,proc
S2-> if .B then S0 ,proc
S1-> if .B then S1 else S1 ,record
S2-> if .B then S1 else S2 ,record
S2-> if .B then S0 ,record
S1-> if .B then S1 else S1 ,integer
S2-> if .B then S1 else S2 ,integer
S2-> if .B then S0 ,integer
S1-> if .B then S1 else S1 ,real
S2-> if .B then S1 else S2 ,real
S2-> if .B then S0 ,real
S1-> if .B then S1 else S1 ,call
S1-> if .B then S1 else S1 ,while
S1-> if .B then S1 else S1 ,begin
S1-> if .B then S1 else S1 ,if
S2-> if .B then S1 else S2 ,call
S2-> if .B then S0 ,call
S2-> if .B then S1 else S2 ,while
S2-> if .B then S0 ,while
S2-> if .B then S1 else S2 ,begin
S2-> if .B then S0 ,begin
S2-> if .B then S1 else S2 ,if
S2-> if .B then S0 ,if
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I518:
S1-> if B .then S1 else S1 ,id
S2-> if B .then S1 else S2 ,id
S2-> if B .then S0 ,id
S1-> if B .then S1 else S1 ,proc
S2-> if B .then S1 else S2 ,proc
S2-> if B .then S0 ,proc
S1-> if B .then S1 else S1 ,record
S2-> if B .then S1 else S2 ,record
S2-> if B .then S0 ,record
S1-> if B .then S1 else S1 ,integer
S2-> if B .then S1 else S2 ,integer
S2-> if B .then S0 ,integer
S1-> if B .then S1 else S1 ,real
S2-> if B .then S1 else S2 ,real
S2-> if B .then S0 ,real
S1-> if B .then S1 else S1 ,call
S1-> if B .then S1 else S1 ,while
S1-> if B .then S1 else S1 ,begin
S1-> if B .then S1 else S1 ,if
S2-> if B .then S1 else S2 ,call
S2-> if B .then S0 ,call
S2-> if B .then S1 else S2 ,while
S2-> if B .then S0 ,while
S2-> if B .then S1 else S2 ,begin
S2-> if B .then S0 ,begin
S2-> if B .then S1 else S2 ,if
S2-> if B .then S0 ,if
B-> B .or B1 ,then
B-> B .or B1 ,or

I519:
S1-> if B then .S1 else S1 ,id
S2-> if B then .S1 else S2 ,id
S2-> if B then .S0 ,id
S1-> if B then .S1 else S1 ,proc
S2-> if B then .S1 else S2 ,proc
S2-> if B then .S0 ,proc
S1-> if B then .S1 else S1 ,record
S2-> if B then .S1 else S2 ,record
S2-> if B then .S0 ,record
S1-> if B then .S1 else S1 ,integer
S2-> if B then .S1 else S2 ,integer
S2-> if B then .S0 ,integer
S1-> if B then .S1 else S1 ,real
S2-> if B then .S1 else S2 ,real
S2-> if B then .S0 ,real
S1-> if B then .S1 else S1 ,call
S1-> if B then .S1 else S1 ,while
S1-> if B then .S1 else S1 ,begin
S1-> if B then .S1 else S1 ,if
S2-> if B then .S1 else S2 ,call
S2-> if B then .S0 ,call
S2-> if B then .S1 else S2 ,while
S2-> if B then .S0 ,while
S2-> if B then .S1 else S2 ,begin
S2-> if B then .S0 ,begin
S2-> if B then .S1 else S2 ,if
S2-> if B then .S0 ,if
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,id
S0-> .begin S3 end ,proc
S0-> .begin S3 end ,record
S0-> .begin S3 end ,integer
S0-> .begin S3 end ,real
S0-> .begin S3 end ,call
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I520:
S1-> if B then S1 .else S1 ,id
S2-> if B then S1 .else S2 ,id
S1-> if B then S1 .else S1 ,proc
S2-> if B then S1 .else S2 ,proc
S1-> if B then S1 .else S1 ,record
S2-> if B then S1 .else S2 ,record
S1-> if B then S1 .else S1 ,integer
S2-> if B then S1 .else S2 ,integer
S1-> if B then S1 .else S1 ,real
S2-> if B then S1 .else S2 ,real
S1-> if B then S1 .else S1 ,call
S1-> if B then S1 .else S1 ,while
S1-> if B then S1 .else S1 ,begin
S1-> if B then S1 .else S1 ,if
S2-> if B then S1 .else S2 ,call
S2-> if B then S1 .else S2 ,while
S2-> if B then S1 .else S2 ,begin
S2-> if B then S1 .else S2 ,if

I521:
S1-> if B then S1 else .S1 ,id
S2-> if B then S1 else .S2 ,id
S1-> if B then S1 else .S1 ,proc
S2-> if B then S1 else .S2 ,proc
S1-> if B then S1 else .S1 ,record
S2-> if B then S1 else .S2 ,record
S1-> if B then S1 else .S1 ,integer
S2-> if B then S1 else .S2 ,integer
S1-> if B then S1 else .S1 ,real
S2-> if B then S1 else .S2 ,real
S1-> if B then S1 else .S1 ,call
S1-> if B then S1 else .S1 ,while
S1-> if B then S1 else .S1 ,begin
S1-> if B then S1 else .S1 ,if
S2-> if B then S1 else .S2 ,call
S2-> if B then S1 else .S2 ,while
S2-> if B then S1 else .S2 ,begin
S2-> if B then S1 else .S2 ,if
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if

I522:
S1-> begin .S3 end ,id
S2-> begin .S3 end ,id
S1-> begin .S3 end ,proc
S2-> begin .S3 end ,proc
S1-> begin .S3 end ,record
S2-> begin .S3 end ,record
S1-> begin .S3 end ,integer
S2-> begin .S3 end ,integer
S1-> begin .S3 end ,real
S2-> begin .S3 end ,real
S1-> begin .S3 end ,call
S1-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,call
S2-> begin .S3 end ,while
S2-> begin .S3 end ,begin
S2-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I523:
S1-> begin S3 .end ,id
S2-> begin S3 .end ,id
S1-> begin S3 .end ,proc
S2-> begin S3 .end ,proc
S1-> begin S3 .end ,record
S2-> begin S3 .end ,record
S1-> begin S3 .end ,integer
S2-> begin S3 .end ,integer
S1-> begin S3 .end ,real
S2-> begin S3 .end ,real
S1-> begin S3 .end ,call
S1-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,call
S2-> begin S3 .end ,while
S2-> begin S3 .end ,begin
S2-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I524:
S1-> begin S3 end. ,id
S2-> begin S3 end. ,id
S1-> begin S3 end. ,proc
S2-> begin S3 end. ,proc
S1-> begin S3 end. ,record
S2-> begin S3 end. ,record
S1-> begin S3 end. ,integer
S2-> begin S3 end. ,integer
S1-> begin S3 end. ,real
S2-> begin S3 end. ,real
S1-> begin S3 end. ,call
S1-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,call
S2-> begin S3 end. ,while
S2-> begin S3 end. ,begin
S2-> begin S3 end. ,if

I525:
X-> integer. ,[
X-> integer. ,id

I526:
X-> real. ,[
X-> real. ,id

I527:
D-> T .id ; ,id
D-> T .id ; ,proc
D-> T .id ; ,record
D-> T .id ; ,integer
D-> T .id ; ,real

I528:
D-> T id .; ,id
D-> T id .; ,proc
D-> T id .; ,record
D-> T id .; ,integer
D-> T id .; ,real

I529:
D-> T id ;. ,id
D-> T id ;. ,proc
D-> T id ;. ,record
D-> T id ;. ,integer
D-> T id ;. ,real

I530:
S1-> if .B then S1 else S1 ,#
S2-> if .B then S1 else S2 ,#
S2-> if .B then S0 ,#
S1-> if .B then S1 else S1 ,proc
S2-> if .B then S1 else S2 ,proc
S2-> if .B then S0 ,proc
S1-> if .B then S1 else S1 ,record
S2-> if .B then S1 else S2 ,record
S2-> if .B then S0 ,record
S1-> if .B then S1 else S1 ,integer
S2-> if .B then S1 else S2 ,integer
S2-> if .B then S0 ,integer
S1-> if .B then S1 else S1 ,real
S2-> if .B then S1 else S2 ,real
S2-> if .B then S0 ,real
S1-> if .B then S1 else S1 ,call
S1-> if .B then S1 else S1 ,id
S1-> if .B then S1 else S1 ,while
S1-> if .B then S1 else S1 ,begin
S1-> if .B then S1 else S1 ,if
S2-> if .B then S1 else S2 ,call
S2-> if .B then S0 ,call
S2-> if .B then S1 else S2 ,id
S2-> if .B then S0 ,id
S2-> if .B then S1 else S2 ,while
S2-> if .B then S0 ,while
S2-> if .B then S1 else S2 ,begin
S2-> if .B then S0 ,begin
S2-> if .B then S1 else S2 ,if
S2-> if .B then S0 ,if
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I531:
S1-> if B .then S1 else S1 ,#
S2-> if B .then S1 else S2 ,#
S2-> if B .then S0 ,#
S1-> if B .then S1 else S1 ,proc
S2-> if B .then S1 else S2 ,proc
S2-> if B .then S0 ,proc
S1-> if B .then S1 else S1 ,record
S2-> if B .then S1 else S2 ,record
S2-> if B .then S0 ,record
S1-> if B .then S1 else S1 ,integer
S2-> if B .then S1 else S2 ,integer
S2-> if B .then S0 ,integer
S1-> if B .then S1 else S1 ,real
S2-> if B .then S1 else S2 ,real
S2-> if B .then S0 ,real
S1-> if B .then S1 else S1 ,call
S1-> if B .then S1 else S1 ,id
S1-> if B .then S1 else S1 ,while
S1-> if B .then S1 else S1 ,begin
S1-> if B .then S1 else S1 ,if
S2-> if B .then S1 else S2 ,call
S2-> if B .then S0 ,call
S2-> if B .then S1 else S2 ,id
S2-> if B .then S0 ,id
S2-> if B .then S1 else S2 ,while
S2-> if B .then S0 ,while
S2-> if B .then S1 else S2 ,begin
S2-> if B .then S0 ,begin
S2-> if B .then S1 else S2 ,if
S2-> if B .then S0 ,if
B-> B .or B1 ,then
B-> B .or B1 ,or

I532:
S1-> if B then .S1 else S1 ,#
S2-> if B then .S1 else S2 ,#
S2-> if B then .S0 ,#
S1-> if B then .S1 else S1 ,proc
S2-> if B then .S1 else S2 ,proc
S2-> if B then .S0 ,proc
S1-> if B then .S1 else S1 ,record
S2-> if B then .S1 else S2 ,record
S2-> if B then .S0 ,record
S1-> if B then .S1 else S1 ,integer
S2-> if B then .S1 else S2 ,integer
S2-> if B then .S0 ,integer
S1-> if B then .S1 else S1 ,real
S2-> if B then .S1 else S2 ,real
S2-> if B then .S0 ,real
S1-> if B then .S1 else S1 ,call
S1-> if B then .S1 else S1 ,id
S1-> if B then .S1 else S1 ,while
S1-> if B then .S1 else S1 ,begin
S1-> if B then .S1 else S1 ,if
S2-> if B then .S1 else S2 ,call
S2-> if B then .S0 ,call
S2-> if B then .S1 else S2 ,id
S2-> if B then .S0 ,id
S2-> if B then .S1 else S2 ,while
S2-> if B then .S0 ,while
S2-> if B then .S1 else S2 ,begin
S2-> if B then .S0 ,begin
S2-> if B then .S1 else S2 ,if
S2-> if B then .S0 ,if
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,#
S0-> .begin S3 end ,proc
S0-> .begin S3 end ,record
S0-> .begin S3 end ,integer
S0-> .begin S3 end ,real
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I533:
S1-> if B then S1 .else S1 ,#
S2-> if B then S1 .else S2 ,#
S1-> if B then S1 .else S1 ,proc
S2-> if B then S1 .else S2 ,proc
S1-> if B then S1 .else S1 ,record
S2-> if B then S1 .else S2 ,record
S1-> if B then S1 .else S1 ,integer
S2-> if B then S1 .else S2 ,integer
S1-> if B then S1 .else S1 ,real
S2-> if B then S1 .else S2 ,real
S1-> if B then S1 .else S1 ,call
S1-> if B then S1 .else S1 ,id
S1-> if B then S1 .else S1 ,while
S1-> if B then S1 .else S1 ,begin
S1-> if B then S1 .else S1 ,if
S2-> if B then S1 .else S2 ,call
S2-> if B then S1 .else S2 ,id
S2-> if B then S1 .else S2 ,while
S2-> if B then S1 .else S2 ,begin
S2-> if B then S1 .else S2 ,if

I534:
S1-> if B then S1 else .S1 ,#
S2-> if B then S1 else .S2 ,#
S1-> if B then S1 else .S1 ,proc
S2-> if B then S1 else .S2 ,proc
S1-> if B then S1 else .S1 ,record
S2-> if B then S1 else .S2 ,record
S1-> if B then S1 else .S1 ,integer
S2-> if B then S1 else .S2 ,integer
S1-> if B then S1 else .S1 ,real
S2-> if B then S1 else .S2 ,real
S1-> if B then S1 else .S1 ,call
S1-> if B then S1 else .S1 ,id
S1-> if B then S1 else .S1 ,while
S1-> if B then S1 else .S1 ,begin
S1-> if B then S1 else .S1 ,if
S2-> if B then S1 else .S2 ,call
S2-> if B then S1 else .S2 ,id
S2-> if B then S1 else .S2 ,while
S2-> if B then S1 else .S2 ,begin
S2-> if B then S1 else .S2 ,if
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then S1 else S1 ,proc
S1-> .while B do S0 ,proc
S1-> .begin S3 end ,proc
S2-> .if B then S1 else S2 ,proc
S2-> .if B then S0 ,proc
S2-> .begin S3 end ,proc
S1-> .if B then S1 else S1 ,record
S1-> .while B do S0 ,record
S1-> .begin S3 end ,record
S2-> .if B then S1 else S2 ,record
S2-> .if B then S0 ,record
S2-> .begin S3 end ,record
S1-> .if B then S1 else S1 ,integer
S1-> .while B do S0 ,integer
S1-> .begin S3 end ,integer
S2-> .if B then S1 else S2 ,integer
S2-> .if B then S0 ,integer
S2-> .begin S3 end ,integer
S1-> .if B then S1 else S1 ,real
S1-> .while B do S0 ,real
S1-> .begin S3 end ,real
S2-> .if B then S1 else S2 ,real
S2-> .if B then S0 ,real
S2-> .begin S3 end ,real
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if

I535:
S1-> begin .S3 end ,#
S2-> begin .S3 end ,#
S1-> begin .S3 end ,proc
S2-> begin .S3 end ,proc
S1-> begin .S3 end ,record
S2-> begin .S3 end ,record
S1-> begin .S3 end ,integer
S2-> begin .S3 end ,integer
S1-> begin .S3 end ,real
S2-> begin .S3 end ,real
S1-> begin .S3 end ,call
S1-> begin .S3 end ,id
S1-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,call
S2-> begin .S3 end ,id
S2-> begin .S3 end ,while
S2-> begin .S3 end ,begin
S2-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I536:
S1-> begin S3 .end ,#
S2-> begin S3 .end ,#
S1-> begin S3 .end ,proc
S2-> begin S3 .end ,proc
S1-> begin S3 .end ,record
S2-> begin S3 .end ,record
S1-> begin S3 .end ,integer
S2-> begin S3 .end ,integer
S1-> begin S3 .end ,real
S2-> begin S3 .end ,real
S1-> begin S3 .end ,call
S1-> begin S3 .end ,id
S1-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,call
S2-> begin S3 .end ,id
S2-> begin S3 .end ,while
S2-> begin S3 .end ,begin
S2-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I537:
S1-> begin S3 end. ,#
S2-> begin S3 end. ,#
S1-> begin S3 end. ,proc
S2-> begin S3 end. ,proc
S1-> begin S3 end. ,record
S2-> begin S3 end. ,record
S1-> begin S3 end. ,integer
S2-> begin S3 end. ,integer
S1-> begin S3 end. ,real
S2-> begin S3 end. ,real
S1-> begin S3 end. ,call
S1-> begin S3 end. ,id
S1-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,call
S2-> begin S3 end. ,id
S2-> begin S3 end. ,while
S2-> begin S3 end. ,begin
S2-> begin S3 end. ,if

I538:
D-> T .id ; ,#
D-> T .id ; ,proc
D-> T .id ; ,record
D-> T .id ; ,integer
D-> T .id ; ,real

I539:
D-> T id .; ,#
D-> T id .; ,proc
D-> T id .; ,record
D-> T id .; ,integer
D-> T id .; ,real

I540:
D-> T id ;. ,#
D-> T id ;. ,proc
D-> T id ;. ,record
D-> T id ;. ,integer
D-> T id ;. ,real

I541:
P-> S. ,#
S-> S .S ,#
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .S1 ,#
S-> .S2 ,#
S-> .call id ( EL ) ,#
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I542:
S-> S S. ,#
S-> S S. ,call
S-> S S. ,id
S-> S S. ,while
S-> S S. ,begin
S-> S S. ,if
S-> S .S ,#
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,begin
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .S1 ,#
S-> .S2 ,#
S-> .call id ( EL ) ,#
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .S1 ,call
S-> .S2 ,call
S-> .call id ( EL ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .S1 ,id
S-> .S2 ,id
S-> .call id ( EL ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .S1 ,while
S-> .S2 ,while
S-> .call id ( EL ) ,while
S-> .S S ,begin
S-> .id = E ; ,begin
S-> .L = E ; ,begin
S-> .S1 ,begin
S-> .S2 ,begin
S-> .call id ( EL ) ,begin
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .S1 ,if
S-> .S2 ,if
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I543:
S-> id .= E ; ,#
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,begin
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I544:
S-> id = .E ; ,#
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,begin
S-> id = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I545:
S-> id = E .; ,#
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,begin
S-> id = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I546:
S-> id = E ;. ,#
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,begin
S-> id = E ;. ,if

I547:
S-> L .= E ; ,#
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,begin
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I548:
S-> L = .E ; ,#
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,begin
S-> L = .E ; ,if
E-> .E + E1 ,;
E-> .E1 ,;
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,;
E1-> .E2 ,;
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,;
E2-> .- E ,;
E2-> .id ,;
E2-> .num ,;
E2-> .L ,;
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I549:
S-> L = E .; ,#
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,begin
S-> L = E .; ,if
E-> E .+ E1 ,;
E-> E .+ E1 ,+

I550:
S-> L = E ;. ,#
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,begin
S-> L = E ;. ,if

I551:
S-> S1. ,#
S-> S1. ,call
S-> S1. ,id
S-> S1. ,while
S-> S1. ,begin
S-> S1. ,if

I552:
S-> S2. ,#
S-> S2. ,call
S-> S2. ,id
S-> S2. ,while
S-> S2. ,begin
S-> S2. ,if

I553:
S-> call .id ( EL ) ,#
S-> call .id ( EL ) ,call
S-> call .id ( EL ) ,id
S-> call .id ( EL ) ,while
S-> call .id ( EL ) ,begin
S-> call .id ( EL ) ,if

I554:
S-> call id .( EL ) ,#
S-> call id .( EL ) ,call
S-> call id .( EL ) ,id
S-> call id .( EL ) ,while
S-> call id .( EL ) ,begin
S-> call id .( EL ) ,if

I555:
S-> call id ( .EL ) ,#
S-> call id ( .EL ) ,call
S-> call id ( .EL ) ,id
S-> call id ( .EL ) ,while
S-> call id ( .EL ) ,begin
S-> call id ( .EL ) ,if
EL-> .EL , E ,)
EL-> .E ,)
EL-> .EL , E ,,
EL-> .E ,,
E-> .E + E1 ,)
E-> .E1 ,)
E-> .E + E1 ,,
E-> .E1 ,,
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,)
E1-> .E2 ,)
E1-> .E1 * E2 ,,
E1-> .E2 ,,
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,)
E2-> .- E ,)
E2-> .id ,)
E2-> .num ,)
E2-> .L ,)
E2-> .( E ) ,,
E2-> .- E ,,
E2-> .id ,,
E2-> .num ,,
E2-> .L ,,
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I556:
S-> call id ( EL .) ,#
S-> call id ( EL .) ,call
S-> call id ( EL .) ,id
S-> call id ( EL .) ,while
S-> call id ( EL .) ,begin
S-> call id ( EL .) ,if
EL-> EL ., E ,)
EL-> EL ., E ,,

I557:
S-> call id ( EL ). ,#
S-> call id ( EL ). ,call
S-> call id ( EL ). ,id
S-> call id ( EL ). ,while
S-> call id ( EL ). ,begin
S-> call id ( EL ). ,if

I558:
S1-> if .B then S1 else S1 ,#
S2-> if .B then S1 else S2 ,#
S2-> if .B then S0 ,#
S1-> if .B then S1 else S1 ,call
S2-> if .B then S1 else S2 ,call
S2-> if .B then S0 ,call
S1-> if .B then S1 else S1 ,id
S2-> if .B then S1 else S2 ,id
S2-> if .B then S0 ,id
S1-> if .B then S1 else S1 ,while
S2-> if .B then S1 else S2 ,while
S2-> if .B then S0 ,while
S1-> if .B then S1 else S1 ,begin
S2-> if .B then S1 else S2 ,begin
S2-> if .B then S0 ,begin
S1-> if .B then S1 else S1 ,if
S2-> if .B then S1 else S2 ,if
S2-> if .B then S0 ,if
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I559:
S1-> if B .then S1 else S1 ,#
S2-> if B .then S1 else S2 ,#
S2-> if B .then S0 ,#
S1-> if B .then S1 else S1 ,call
S2-> if B .then S1 else S2 ,call
S2-> if B .then S0 ,call
S1-> if B .then S1 else S1 ,id
S2-> if B .then S1 else S2 ,id
S2-> if B .then S0 ,id
S1-> if B .then S1 else S1 ,while
S2-> if B .then S1 else S2 ,while
S2-> if B .then S0 ,while
S1-> if B .then S1 else S1 ,begin
S2-> if B .then S1 else S2 ,begin
S2-> if B .then S0 ,begin
S1-> if B .then S1 else S1 ,if
S2-> if B .then S1 else S2 ,if
S2-> if B .then S0 ,if
B-> B .or B1 ,then
B-> B .or B1 ,or

I560:
S1-> if B then .S1 else S1 ,#
S2-> if B then .S1 else S2 ,#
S2-> if B then .S0 ,#
S1-> if B then .S1 else S1 ,call
S2-> if B then .S1 else S2 ,call
S2-> if B then .S0 ,call
S1-> if B then .S1 else S1 ,id
S2-> if B then .S1 else S2 ,id
S2-> if B then .S0 ,id
S1-> if B then .S1 else S1 ,while
S2-> if B then .S1 else S2 ,while
S2-> if B then .S0 ,while
S1-> if B then .S1 else S1 ,begin
S2-> if B then .S1 else S2 ,begin
S2-> if B then .S0 ,begin
S1-> if B then .S1 else S1 ,if
S2-> if B then .S1 else S2 ,if
S2-> if B then .S0 ,if
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,#
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I561:
S1-> if B then S1 .else S1 ,#
S2-> if B then S1 .else S2 ,#
S1-> if B then S1 .else S1 ,call
S2-> if B then S1 .else S2 ,call
S1-> if B then S1 .else S1 ,id
S2-> if B then S1 .else S2 ,id
S1-> if B then S1 .else S1 ,while
S2-> if B then S1 .else S2 ,while
S1-> if B then S1 .else S1 ,begin
S2-> if B then S1 .else S2 ,begin
S1-> if B then S1 .else S1 ,if
S2-> if B then S1 .else S2 ,if

I562:
S1-> if B then S1 else .S1 ,#
S2-> if B then S1 else .S2 ,#
S1-> if B then S1 else .S1 ,call
S2-> if B then S1 else .S2 ,call
S1-> if B then S1 else .S1 ,id
S2-> if B then S1 else .S2 ,id
S1-> if B then S1 else .S1 ,while
S2-> if B then S1 else .S2 ,while
S1-> if B then S1 else .S1 ,begin
S2-> if B then S1 else .S2 ,begin
S1-> if B then S1 else .S1 ,if
S2-> if B then S1 else .S2 ,if
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if

I563:
S1-> if B then S1 else S1. ,#
S1-> if B then S1 else S1. ,call
S1-> if B then S1 else S1. ,id
S1-> if B then S1 else S1. ,while
S1-> if B then S1 else S1. ,begin
S1-> if B then S1 else S1. ,if

I564:
S2-> if B then S1 else S2. ,#
S2-> if B then S1 else S2. ,call
S2-> if B then S1 else S2. ,id
S2-> if B then S1 else S2. ,while
S2-> if B then S1 else S2. ,begin
S2-> if B then S1 else S2. ,if

I565:
S1-> while .B do S0 ,#
S1-> while .B do S0 ,call
S1-> while .B do S0 ,id
S1-> while .B do S0 ,while
S1-> while .B do S0 ,begin
S1-> while .B do S0 ,if
B-> .B or B1 ,do
B-> .B1 ,do
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,do
B1-> .B2 ,do
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,do
B2-> .( B ) ,do
B2-> .E R E ,do
B2-> .true ,do
B2-> .false ,do
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I566:
S1-> while B .do S0 ,#
S1-> while B .do S0 ,call
S1-> while B .do S0 ,id
S1-> while B .do S0 ,while
S1-> while B .do S0 ,begin
S1-> while B .do S0 ,if
B-> B .or B1 ,do
B-> B .or B1 ,or

I567:
S1-> while B do .S0 ,#
S1-> while B do .S0 ,call
S1-> while B do .S0 ,id
S1-> while B do .S0 ,while
S1-> while B do .S0 ,begin
S1-> while B do .S0 ,if
S0-> .begin S3 end ,#
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I568:
S1-> while B do S0. ,#
S1-> while B do S0. ,call
S1-> while B do S0. ,id
S1-> while B do S0. ,while
S1-> while B do S0. ,begin
S1-> while B do S0. ,if

I569:
S0-> begin .S3 end ,#
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I570:
S0-> begin S3 .end ,#
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I571:
S0-> begin S3 end. ,#
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I572:
S1-> begin .S3 end ,#
S2-> begin .S3 end ,#
S1-> begin .S3 end ,call
S2-> begin .S3 end ,call
S1-> begin .S3 end ,id
S2-> begin .S3 end ,id
S1-> begin .S3 end ,while
S2-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S2-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I573:
S1-> begin S3 .end ,#
S2-> begin S3 .end ,#
S1-> begin S3 .end ,call
S2-> begin S3 .end ,call
S1-> begin S3 .end ,id
S2-> begin S3 .end ,id
S1-> begin S3 .end ,while
S2-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S2-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I574:
S1-> begin S3 end. ,#
S2-> begin S3 end. ,#
S1-> begin S3 end. ,call
S2-> begin S3 end. ,call
S1-> begin S3 end. ,id
S2-> begin S3 end. ,id
S1-> begin S3 end. ,while
S2-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S2-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,if

I575:
S2-> if B then S0. ,#
S2-> if B then S0. ,call
S2-> if B then S0. ,id
S2-> if B then S0. ,while
S2-> if B then S0. ,begin
S2-> if B then S0. ,if

I576:
S1-> begin .S3 end ,else
S0-> begin .S3 end ,#
S0-> begin .S3 end ,call
S0-> begin .S3 end ,id
S0-> begin .S3 end ,while
S0-> begin .S3 end ,begin
S0-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I577:
S1-> begin S3 .end ,else
S0-> begin S3 .end ,#
S0-> begin S3 .end ,call
S0-> begin S3 .end ,id
S0-> begin S3 .end ,while
S0-> begin S3 .end ,begin
S0-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I578:
S1-> begin S3 end. ,else
S0-> begin S3 end. ,#
S0-> begin S3 end. ,call
S0-> begin S3 end. ,id
S0-> begin S3 end. ,while
S0-> begin S3 end. ,begin
S0-> begin S3 end. ,if

I579:
S1-> if .B then S1 else S1 ,#
S2-> if .B then S1 else S2 ,#
S2-> if .B then S0 ,#
S1-> if .B then S1 else S1 ,call
S1-> if .B then S1 else S1 ,id
S1-> if .B then S1 else S1 ,while
S1-> if .B then S1 else S1 ,begin
S1-> if .B then S1 else S1 ,if
S2-> if .B then S1 else S2 ,call
S2-> if .B then S0 ,call
S2-> if .B then S1 else S2 ,id
S2-> if .B then S0 ,id
S2-> if .B then S1 else S2 ,while
S2-> if .B then S0 ,while
S2-> if .B then S1 else S2 ,begin
S2-> if .B then S0 ,begin
S2-> if .B then S1 else S2 ,if
S2-> if .B then S0 ,if
B-> .B or B1 ,then
B-> .B1 ,then
B-> .B or B1 ,or
B-> .B1 ,or
B1-> .B1 and B2 ,then
B1-> .B2 ,then
B1-> .B1 and B2 ,or
B1-> .B2 ,or
B1-> .B1 and B2 ,and
B1-> .B2 ,and
B2-> .not B ,then
B2-> .( B ) ,then
B2-> .E R E ,then
B2-> .true ,then
B2-> .false ,then
B2-> .not B ,or
B2-> .( B ) ,or
B2-> .E R E ,or
B2-> .true ,or
B2-> .false ,or
B2-> .not B ,and
B2-> .( B ) ,and
B2-> .E R E ,and
B2-> .true ,and
B2-> .false ,and
E-> .E + E1 ,==
E-> .E + E1 ,<=
E-> .E + E1 ,!=
E-> .E + E1 ,<
E-> .E + E1 ,>
E-> .E + E1 ,>=
E-> .E1 ,==
E-> .E1 ,<=
E-> .E1 ,!=
E-> .E1 ,<
E-> .E1 ,>
E-> .E1 ,>=
E-> .E + E1 ,+
E-> .E1 ,+
E1-> .E1 * E2 ,==
E1-> .E2 ,==
E1-> .E1 * E2 ,<=
E1-> .E2 ,<=
E1-> .E1 * E2 ,!=
E1-> .E2 ,!=
E1-> .E1 * E2 ,<
E1-> .E2 ,<
E1-> .E1 * E2 ,>
E1-> .E2 ,>
E1-> .E1 * E2 ,>=
E1-> .E2 ,>=
E1-> .E1 * E2 ,+
E1-> .E2 ,+
E1-> .E1 * E2 ,*
E1-> .E2 ,*
E2-> .( E ) ,==
E2-> .- E ,==
E2-> .id ,==
E2-> .num ,==
E2-> .L ,==
E2-> .( E ) ,<=
E2-> .- E ,<=
E2-> .id ,<=
E2-> .num ,<=
E2-> .L ,<=
E2-> .( E ) ,!=
E2-> .- E ,!=
E2-> .id ,!=
E2-> .num ,!=
E2-> .L ,!=
E2-> .( E ) ,<
E2-> .- E ,<
E2-> .id ,<
E2-> .num ,<
E2-> .L ,<
E2-> .( E ) ,>
E2-> .- E ,>
E2-> .id ,>
E2-> .num ,>
E2-> .L ,>
E2-> .( E ) ,>=
E2-> .- E ,>=
E2-> .id ,>=
E2-> .num ,>=
E2-> .L ,>=
E2-> .( E ) ,+
E2-> .- E ,+
E2-> .id ,+
E2-> .num ,+
E2-> .L ,+
E2-> .( E ) ,*
E2-> .- E ,*
E2-> .id ,*
E2-> .num ,*
E2-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I580:
S1-> if B .then S1 else S1 ,#
S2-> if B .then S1 else S2 ,#
S2-> if B .then S0 ,#
S1-> if B .then S1 else S1 ,call
S1-> if B .then S1 else S1 ,id
S1-> if B .then S1 else S1 ,while
S1-> if B .then S1 else S1 ,begin
S1-> if B .then S1 else S1 ,if
S2-> if B .then S1 else S2 ,call
S2-> if B .then S0 ,call
S2-> if B .then S1 else S2 ,id
S2-> if B .then S0 ,id
S2-> if B .then S1 else S2 ,while
S2-> if B .then S0 ,while
S2-> if B .then S1 else S2 ,begin
S2-> if B .then S0 ,begin
S2-> if B .then S1 else S2 ,if
S2-> if B .then S0 ,if
B-> B .or B1 ,then
B-> B .or B1 ,or

I581:
S1-> if B then .S1 else S1 ,#
S2-> if B then .S1 else S2 ,#
S2-> if B then .S0 ,#
S1-> if B then .S1 else S1 ,call
S1-> if B then .S1 else S1 ,id
S1-> if B then .S1 else S1 ,while
S1-> if B then .S1 else S1 ,begin
S1-> if B then .S1 else S1 ,if
S2-> if B then .S1 else S2 ,call
S2-> if B then .S0 ,call
S2-> if B then .S1 else S2 ,id
S2-> if B then .S0 ,id
S2-> if B then .S1 else S2 ,while
S2-> if B then .S0 ,while
S2-> if B then .S1 else S2 ,begin
S2-> if B then .S0 ,begin
S2-> if B then .S1 else S2 ,if
S2-> if B then .S0 ,if
S1-> .if B then S1 else S1 ,else
S1-> .while B do S0 ,else
S1-> .begin S3 end ,else
S0-> .begin S3 end ,#
S0-> .begin S3 end ,call
S0-> .begin S3 end ,id
S0-> .begin S3 end ,while
S0-> .begin S3 end ,begin
S0-> .begin S3 end ,if

I582:
S1-> if B then S1 .else S1 ,#
S2-> if B then S1 .else S2 ,#
S1-> if B then S1 .else S1 ,call
S1-> if B then S1 .else S1 ,id
S1-> if B then S1 .else S1 ,while
S1-> if B then S1 .else S1 ,begin
S1-> if B then S1 .else S1 ,if
S2-> if B then S1 .else S2 ,call
S2-> if B then S1 .else S2 ,id
S2-> if B then S1 .else S2 ,while
S2-> if B then S1 .else S2 ,begin
S2-> if B then S1 .else S2 ,if

I583:
S1-> if B then S1 else .S1 ,#
S2-> if B then S1 else .S2 ,#
S1-> if B then S1 else .S1 ,call
S1-> if B then S1 else .S1 ,id
S1-> if B then S1 else .S1 ,while
S1-> if B then S1 else .S1 ,begin
S1-> if B then S1 else .S1 ,if
S2-> if B then S1 else .S2 ,call
S2-> if B then S1 else .S2 ,id
S2-> if B then S1 else .S2 ,while
S2-> if B then S1 else .S2 ,begin
S2-> if B then S1 else .S2 ,if
S1-> .if B then S1 else S1 ,#
S1-> .while B do S0 ,#
S1-> .begin S3 end ,#
S2-> .if B then S1 else S2 ,#
S2-> .if B then S0 ,#
S2-> .begin S3 end ,#
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if

I584:
S1-> begin .S3 end ,#
S2-> begin .S3 end ,#
S1-> begin .S3 end ,call
S1-> begin .S3 end ,id
S1-> begin .S3 end ,while
S1-> begin .S3 end ,begin
S1-> begin .S3 end ,if
S2-> begin .S3 end ,call
S2-> begin .S3 end ,id
S2-> begin .S3 end ,while
S2-> begin .S3 end ,begin
S2-> begin .S3 end ,if
S3-> .S3 ; S ,end
S3-> .S ,end
S3-> .S3 ; S ,;
S3-> .S ,;
S-> .S S ,end
S-> .id = E ; ,end
S-> .L = E ; ,end
S-> .S1 ,end
S-> .S2 ,end
S-> .call id ( EL ) ,end
S-> .S S ,;
S-> .id = E ; ,;
S-> .L = E ; ,;
S-> .S1 ,;
S-> .S2 ,;
S-> .call id ( EL ) ,;
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,begin
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,begin
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,begin
S-> .L = E ; ,if
S-> .S1 ,call
S-> .S1 ,id
S-> .S1 ,while
S-> .S1 ,begin
S-> .S1 ,if
S-> .S2 ,call
S-> .S2 ,id
S-> .S2 ,while
S-> .S2 ,begin
S-> .S2 ,if
S-> .call id ( EL ) ,call
S-> .call id ( EL ) ,id
S-> .call id ( EL ) ,while
S-> .call id ( EL ) ,begin
S-> .call id ( EL ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
S1-> .if B then S1 else S1 ,end
S1-> .while B do S0 ,end
S1-> .begin S3 end ,end
S2-> .if B then S1 else S2 ,end
S2-> .if B then S0 ,end
S2-> .begin S3 end ,end
S1-> .if B then S1 else S1 ,;
S1-> .while B do S0 ,;
S1-> .begin S3 end ,;
S2-> .if B then S1 else S2 ,;
S2-> .if B then S0 ,;
S2-> .begin S3 end ,;
S1-> .if B then S1 else S1 ,call
S1-> .while B do S0 ,call
S1-> .begin S3 end ,call
S1-> .if B then S1 else S1 ,id
S1-> .while B do S0 ,id
S1-> .begin S3 end ,id
S1-> .if B then S1 else S1 ,while
S1-> .while B do S0 ,while
S1-> .begin S3 end ,while
S1-> .if B then S1 else S1 ,begin
S1-> .while B do S0 ,begin
S1-> .begin S3 end ,begin
S1-> .if B then S1 else S1 ,if
S1-> .while B do S0 ,if
S1-> .begin S3 end ,if
S2-> .if B then S1 else S2 ,call
S2-> .if B then S0 ,call
S2-> .begin S3 end ,call
S2-> .if B then S1 else S2 ,id
S2-> .if B then S0 ,id
S2-> .begin S3 end ,id
S2-> .if B then S1 else S2 ,while
S2-> .if B then S0 ,while
S2-> .begin S3 end ,while
S2-> .if B then S1 else S2 ,begin
S2-> .if B then S0 ,begin
S2-> .begin S3 end ,begin
S2-> .if B then S1 else S2 ,if
S2-> .if B then S0 ,if
S2-> .begin S3 end ,if
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I585:
S1-> begin S3 .end ,#
S2-> begin S3 .end ,#
S1-> begin S3 .end ,call
S1-> begin S3 .end ,id
S1-> begin S3 .end ,while
S1-> begin S3 .end ,begin
S1-> begin S3 .end ,if
S2-> begin S3 .end ,call
S2-> begin S3 .end ,id
S2-> begin S3 .end ,while
S2-> begin S3 .end ,begin
S2-> begin S3 .end ,if
S3-> S3 .; S ,end
S3-> S3 .; S ,;

I586:
S1-> begin S3 end. ,#
S2-> begin S3 end. ,#
S1-> begin S3 end. ,call
S1-> begin S3 end. ,id
S1-> begin S3 end. ,while
S1-> begin S3 end. ,begin
S1-> begin S3 end. ,if
S2-> begin S3 end. ,call
S2-> begin S3 end. ,id
S2-> begin S3 end. ,while
S2-> begin S3 end. ,begin
S2-> begin S3 end. ,if
